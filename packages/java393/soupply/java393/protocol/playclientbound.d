/*
 * This file has been automatically generated by Soupply and released under the MIT license.
 * Generated from data/java393.xml
 */
module soupply.java393.protocol.play_clientbound;

static import std.conv;
import std.typetuple : TypeTuple;
import packetmaker;

import soupply.util;
import soupply.java393.metadata : Metadata;
import soupply.java393.packet : Java393Packet;

static import soupply.java393.types;

alias Packets = TypeTuple!(SpawnObject, SpawnExperienceOrb, SpawnGlobalEntity, SpawnMob, SpawnPainting, SpawnPlayer, Animation, Statistics, BlockBreakAnimation, UpdateBlockEntity, BlockAction, BlockChange, BossBar, ServerDifficulty, ChatMessage, MultiBlockChange, TabComplete, DeclareCommands, ConfirmTransaction, CloseWindow, OpenWindow, WindowItems, WindowProperty, SetSlot, SetCooldown, PluginMessage, NamedSoundEffect, Disconnect, EntityStatus, NbtQueryResponse, Explosion, UnloadChunk, ChangeGameState, KeepAlive, ChunkData, Effect, SpawnParticle, JoinGame, Map, Entity, EntityRelativeMove, EntityLookAndRelativeMove, EntityLook, VehicleMove, OpenSignEditor, CraftRecipeResponse, PlayerAbilities, CombatEvent, PlayerListItem, FacePlayer, PlayerPositionAndLook, UseBed, UnlockRecipes, DestroyEntities, RemoveEntityEffect, ResourcePackSend, Respawn, EntityHeadLook, AdvancementProgress, WorldBorder, Camera, HeldItemChange, DisplayScoreboard, EntityMetadata, AttachEntity, EntityVelocity, EntityEquipment, SetExperience, UpdateHealth, ScoreboardObjective, SetPassengers, Teams, UpdateScore, SpawnPosition, TimeUpdate, Title, StopSound, SoundEffect, PlayerListHeaderAndFooter, CollectItem, EntityTeleport, Advencements, EntityProperties, EntityEffect, DeclareRecipes, Tags);

class SpawnObject : Java393Packet
{

    enum uint ID = 0;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    enum string[] __fields = ["entityId", "uuid", "type", "position", "pitch", "yaw", "data", "velocity"];

    @Var uint entityId;
    UUID uuid;
    ubyte type;
    Vector!(double, "xyz") position;
    ubyte pitch;
    ubyte yaw;
    int data;
    Vector!(short, "xyz") velocity;

    this() pure nothrow @safe @nogc {}

    this(uint entityId, UUID uuid=UUID.init, ubyte type=ubyte.init, Vector!(double, "xyz") position=Vector!(double, "xyz").init, ubyte pitch=ubyte.init, ubyte yaw=ubyte.init, int data=int.init, Vector!(short, "xyz") velocity=Vector!(short, "xyz").init) pure nothrow @safe @nogc
    {
        this.entityId = entityId;
        this.uuid = uuid;
        this.type = type;
        this.position = position;
        this.pitch = pitch;
        this.yaw = yaw;
        this.data = data;
        this.velocity = velocity;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        SpawnObject ret = new SpawnObject();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "SpawnObject(entityId: " ~ std.conv.to!string(this.entityId) ~ ", uuid: " ~ std.conv.to!string(this.uuid) ~ ", type: " ~ std.conv.to!string(this.type) ~ ", position: " ~ std.conv.to!string(this.position) ~ ", pitch: " ~ std.conv.to!string(this.pitch) ~ ", yaw: " ~ std.conv.to!string(this.yaw) ~ ", data: " ~ std.conv.to!string(this.data) ~ ", velocity: " ~ std.conv.to!string(this.velocity) ~ ")";
    }

}

class SpawnExperienceOrb : Java393Packet
{

    enum uint ID = 1;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    enum string[] __fields = ["entityId", "position", "count"];

    @Var uint entityId;
    Vector!(double, "xyz") position;
    ushort count;

    this() pure nothrow @safe @nogc {}

    this(uint entityId, Vector!(double, "xyz") position=Vector!(double, "xyz").init, ushort count=ushort.init) pure nothrow @safe @nogc
    {
        this.entityId = entityId;
        this.position = position;
        this.count = count;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        SpawnExperienceOrb ret = new SpawnExperienceOrb();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "SpawnExperienceOrb(entityId: " ~ std.conv.to!string(this.entityId) ~ ", position: " ~ std.conv.to!string(this.position) ~ ", count: " ~ std.conv.to!string(this.count) ~ ")";
    }

}

class SpawnGlobalEntity : Java393Packet
{

    enum uint ID = 2;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    // type
    enum ubyte THUNDERBOLT = 1;

    enum string[] __fields = ["entityId", "type", "position"];

    @Var uint entityId;
    ubyte type;
    Vector!(double, "xyz") position;

    this() pure nothrow @safe @nogc {}

    this(uint entityId, ubyte type=ubyte.init, Vector!(double, "xyz") position=Vector!(double, "xyz").init) pure nothrow @safe @nogc
    {
        this.entityId = entityId;
        this.type = type;
        this.position = position;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        SpawnGlobalEntity ret = new SpawnGlobalEntity();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "SpawnGlobalEntity(entityId: " ~ std.conv.to!string(this.entityId) ~ ", type: " ~ std.conv.to!string(this.type) ~ ", position: " ~ std.conv.to!string(this.position) ~ ")";
    }

}

class SpawnMob : Java393Packet
{

    enum uint ID = 3;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    enum string[] __fields = ["entityId", "uuid", "type", "position", "yaw", "pitch", "headPitch", "velocity", "metadata"];

    @Var uint entityId;
    UUID uuid;
    @Var uint type;
    Vector!(double, "xyz") position;
    ubyte yaw;
    ubyte pitch;
    ubyte headPitch;
    Vector!(short, "xyz") velocity;
    Metadata metadata;

    this() pure nothrow @safe @nogc {}

    this(uint entityId, UUID uuid=UUID.init, uint type=uint.init, Vector!(double, "xyz") position=Vector!(double, "xyz").init, ubyte yaw=ubyte.init, ubyte pitch=ubyte.init, ubyte headPitch=ubyte.init, Vector!(short, "xyz") velocity=Vector!(short, "xyz").init, Metadata metadata=Metadata.init) pure nothrow @safe @nogc
    {
        this.entityId = entityId;
        this.uuid = uuid;
        this.type = type;
        this.position = position;
        this.yaw = yaw;
        this.pitch = pitch;
        this.headPitch = headPitch;
        this.velocity = velocity;
        this.metadata = metadata;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        SpawnMob ret = new SpawnMob();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "SpawnMob(entityId: " ~ std.conv.to!string(this.entityId) ~ ", uuid: " ~ std.conv.to!string(this.uuid) ~ ", type: " ~ std.conv.to!string(this.type) ~ ", position: " ~ std.conv.to!string(this.position) ~ ", yaw: " ~ std.conv.to!string(this.yaw) ~ ", pitch: " ~ std.conv.to!string(this.pitch) ~ ", headPitch: " ~ std.conv.to!string(this.headPitch) ~ ", velocity: " ~ std.conv.to!string(this.velocity) ~ ", metadata: " ~ std.conv.to!string(this.metadata) ~ ")";
    }

}

class SpawnPainting : Java393Packet
{

    enum uint ID = 4;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    // motive
    enum uint KEBAB = 0;
    enum uint AZTEC = 1;
    enum uint ALBAN = 2;
    enum uint AZTEC2 = 3;
    enum uint BOMB = 4;
    enum uint PLANT = 5;
    enum uint WASTELAND = 6;
    enum uint POOL = 7;
    enum uint COURBET = 8;
    enum uint SEA = 9;
    enum uint SUNSET = 10;
    enum uint CREEBET = 11;
    enum uint WANDERER = 12;
    enum uint GRAHAM = 13;
    enum uint MATCH = 14;
    enum uint BUST = 15;
    enum uint STAGE = 16;
    enum uint VOID = 17;
    enum uint SULL_AND_ROSES = 18;
    enum uint WITHER = 19;
    enum uint FIGHTERS = 20;
    enum uint POINTER = 21;
    enum uint PIGSCENE = 22;
    enum uint BURNING_SKULL = 23;
    enum uint SKELETON = 24;
    enum uint DONKEY_KONG = 25;

    // direction
    enum ubyte SOUTH = 0;
    enum ubyte WEST = 1;
    enum ubyte NORTH = 2;
    enum ubyte EAST = 3;

    enum string[] __fields = ["entityId", "uuid", "motive", "position", "direction"];

    @Var uint entityId;
    UUID uuid;
    @Var uint motive;
    ulong position;
    ubyte direction;

    this() pure nothrow @safe @nogc {}

    this(uint entityId, UUID uuid=UUID.init, uint motive=uint.init, ulong position=ulong.init, ubyte direction=ubyte.init) pure nothrow @safe @nogc
    {
        this.entityId = entityId;
        this.uuid = uuid;
        this.motive = motive;
        this.position = position;
        this.direction = direction;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        SpawnPainting ret = new SpawnPainting();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "SpawnPainting(entityId: " ~ std.conv.to!string(this.entityId) ~ ", uuid: " ~ std.conv.to!string(this.uuid) ~ ", motive: " ~ std.conv.to!string(this.motive) ~ ", position: " ~ std.conv.to!string(this.position) ~ ", direction: " ~ std.conv.to!string(this.direction) ~ ")";
    }

}

class SpawnPlayer : Java393Packet
{

    enum uint ID = 5;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    enum string[] __fields = ["entityId", "uuid", "position", "yaw", "pitch", "metadata"];

    @Var uint entityId;
    UUID uuid;
    Vector!(double, "xyz") position;
    ubyte yaw;
    ubyte pitch;
    Metadata metadata;

    this() pure nothrow @safe @nogc {}

    this(uint entityId, UUID uuid=UUID.init, Vector!(double, "xyz") position=Vector!(double, "xyz").init, ubyte yaw=ubyte.init, ubyte pitch=ubyte.init, Metadata metadata=Metadata.init) pure nothrow @safe @nogc
    {
        this.entityId = entityId;
        this.uuid = uuid;
        this.position = position;
        this.yaw = yaw;
        this.pitch = pitch;
        this.metadata = metadata;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        SpawnPlayer ret = new SpawnPlayer();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "SpawnPlayer(entityId: " ~ std.conv.to!string(this.entityId) ~ ", uuid: " ~ std.conv.to!string(this.uuid) ~ ", position: " ~ std.conv.to!string(this.position) ~ ", yaw: " ~ std.conv.to!string(this.yaw) ~ ", pitch: " ~ std.conv.to!string(this.pitch) ~ ", metadata: " ~ std.conv.to!string(this.metadata) ~ ")";
    }

}

class Animation : Java393Packet
{

    enum uint ID = 6;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    // animation
    enum ubyte SWING_MAIN_ARM = 0;
    enum ubyte TAKE_DAMAGE = 1;
    enum ubyte LEAVE_BED = 2;
    enum ubyte SWING_OFFHAND = 3;
    enum ubyte CRITICAL_EFFECT = 4;
    enum ubyte MAGICAL_CRITICAL_EFFECT = 5;

    enum string[] __fields = ["entityId", "animation"];

    @Var uint entityId;
    ubyte animation;

    this() pure nothrow @safe @nogc {}

    this(uint entityId, ubyte animation=ubyte.init) pure nothrow @safe @nogc
    {
        this.entityId = entityId;
        this.animation = animation;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        Animation ret = new Animation();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "Animation(entityId: " ~ std.conv.to!string(this.entityId) ~ ", animation: " ~ std.conv.to!string(this.animation) ~ ")";
    }

}

class Statistics : Java393Packet
{

    enum uint ID = 7;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    enum string[] __fields = ["statistics"];

    soupply.java393.types.Statistic[] statistics;

    this() pure nothrow @safe @nogc {}

    this(soupply.java393.types.Statistic[] statistics) pure nothrow @safe @nogc
    {
        this.statistics = statistics;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        Statistics ret = new Statistics();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "Statistics(statistics: " ~ std.conv.to!string(this.statistics) ~ ")";
    }

}

class BlockBreakAnimation : Java393Packet
{

    enum uint ID = 8;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    enum string[] __fields = ["entityId", "position", "stage"];

    @Var uint entityId;
    ulong position;
    ubyte stage;

    this() pure nothrow @safe @nogc {}

    this(uint entityId, ulong position=ulong.init, ubyte stage=ubyte.init) pure nothrow @safe @nogc
    {
        this.entityId = entityId;
        this.position = position;
        this.stage = stage;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        BlockBreakAnimation ret = new BlockBreakAnimation();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "BlockBreakAnimation(entityId: " ~ std.conv.to!string(this.entityId) ~ ", position: " ~ std.conv.to!string(this.position) ~ ", stage: " ~ std.conv.to!string(this.stage) ~ ")";
    }

}

class UpdateBlockEntity : Java393Packet
{

    enum uint ID = 9;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    // action
    enum ubyte MOB_SPAWNER_DATA = 1;
    enum ubyte COMMAND_BLOCK_TEXT = 2;
    enum ubyte BEACON_POWERS = 3;
    enum ubyte MOB_HEAD_DATA = 4;
    enum ubyte DECLARE_CONDUIT = 5;
    enum ubyte BANNER_DATA = 6;
    enum ubyte STRUCTURE_DATA = 7;
    enum ubyte END_GATEWAY_DESTINATION = 8;
    enum ubyte SIGN_TEXT = 9;
    enum ubyte SHULKER_BOX_DECLARATION = 10;
    enum ubyte DECLARE_BED = 11;

    enum string[] __fields = ["position", "action", "nbt"];

    ulong position;
    ubyte action;
    @Bytes ubyte[] nbt;

    this() pure nothrow @safe @nogc {}

    this(ulong position, ubyte action=ubyte.init, ubyte[] nbt=(ubyte[]).init) pure nothrow @safe @nogc
    {
        this.position = position;
        this.action = action;
        this.nbt = nbt;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        UpdateBlockEntity ret = new UpdateBlockEntity();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "UpdateBlockEntity(position: " ~ std.conv.to!string(this.position) ~ ", action: " ~ std.conv.to!string(this.action) ~ ", nbt: " ~ std.conv.to!string(this.nbt) ~ ")";
    }

}

class BlockAction : Java393Packet
{

    enum uint ID = 10;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    // action
    enum ubyte NOTE_BLOCK_HARP = 0;
    enum ubyte NOTE_BLOCK_BASS_DRUM = 1;
    enum ubyte NOTE_BLOCK_SNARE_DRUM = 2;
    enum ubyte NOTE_BLOCK_CLICKS = 3;
    enum ubyte NOTE_BLOCK_STICKS = 3;
    enum ubyte NOTE_BLOCK_BASS_GUITAR = 4;
    enum ubyte PISTON_EXTEND = 0;
    enum ubyte PISTON_RETRACT = 1;
    enum ubyte CHEST_WATCHERS = 1;
    enum ubyte BEACON_RECALCULATE = 1;
    enum ubyte MOB_SPAWNER_RESET_DELAY = 1;
    enum ubyte END_GATEWAY_YELLOW_BEAM = 1;

    // parameter
    enum ubyte PISTON_DOWN = 0;
    enum ubyte PISTON_UP = 1;
    enum ubyte PISTON_SOUTH = 2;
    enum ubyte PISTON_WEST = 3;
    enum ubyte PISTON_NORTH = 4;
    enum ubyte PISTON_EAST = 5;

    enum string[] __fields = ["position", "action", "parameter", "blockType"];

    ulong position;
    ubyte action;
    ubyte parameter;
    @Var uint blockType;

    this() pure nothrow @safe @nogc {}

    this(ulong position, ubyte action=ubyte.init, ubyte parameter=ubyte.init, uint blockType=uint.init) pure nothrow @safe @nogc
    {
        this.position = position;
        this.action = action;
        this.parameter = parameter;
        this.blockType = blockType;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        BlockAction ret = new BlockAction();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "BlockAction(position: " ~ std.conv.to!string(this.position) ~ ", action: " ~ std.conv.to!string(this.action) ~ ", parameter: " ~ std.conv.to!string(this.parameter) ~ ", blockType: " ~ std.conv.to!string(this.blockType) ~ ")";
    }

}

class BlockChange : Java393Packet
{

    enum uint ID = 11;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    enum string[] __fields = ["position", "block"];

    ulong position;
    @Var uint block;

    this() pure nothrow @safe @nogc {}

    this(ulong position, uint block=uint.init) pure nothrow @safe @nogc
    {
        this.position = position;
        this.block = block;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        BlockChange ret = new BlockChange();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "BlockChange(position: " ~ std.conv.to!string(this.position) ~ ", block: " ~ std.conv.to!string(this.block) ~ ")";
    }

}

class BossBar : Java393Packet
{

    enum uint ID = 12;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    enum string[] __fields = ["uuid", "action"];

    UUID uuid;
    @Var uint action;

    this() pure nothrow @safe @nogc {}

    this(UUID uuid, uint action=uint.init) pure nothrow @safe @nogc
    {
        this.uuid = uuid;
        this.action = action;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        BossBar ret = new BossBar();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "BossBar(uuid: " ~ std.conv.to!string(this.uuid) ~ ", action: " ~ std.conv.to!string(this.action) ~ ")";
    }

    enum string variantField = "action";

    alias Variants = TypeTuple!(Add, Remove, UpdateHealth, UpdateTitle, UpdateStyle, UpdateFlags);

    class Add : Java393Packet
    {

        enum typeof(action) ACTION = 0;

        // color
        enum uint PINK = 0;
        enum uint BLUE = 1;
        enum uint RED = 2;
        enum uint GREEN = 3;
        enum uint YELLOW = 4;
        enum uint PURPLE = 5;
        enum uint WHITE = 6;

        // division
        enum uint NO_DIVISION = 0;
        enum uint SIX_NOTCHES = 1;
        enum uint TEN_NOTCHES = 2;
        enum uint TWELVE_NOTCHES = 3;
        enum uint TWENTY_NOTCHES = 4;

        // flags
        enum ubyte DARK_SKY = 1;
        enum ubyte IS_DRAGON_BAR = 2;

        enum string[] __fields = ["title", "health", "color", "division", "flags"];

        string title;
        float health;
        @Var uint color;
        @Var uint division;
        ubyte flags;

        this() pure nothrow @safe @nogc {}

        this(string title, float health=float.init, uint color=uint.init, uint division=uint.init, ubyte flags=ubyte.init) pure nothrow @safe @nogc
        {
            this.title = title;
            this.health = health;
            this.color = color;
            this.division = division;
            this.flags = flags;
        }

        mixin Make;

        override string toString()
        {
            return "BossBar.Add(title: " ~ std.conv.to!string(this.title) ~ ", health: " ~ std.conv.to!string(this.health) ~ ", color: " ~ std.conv.to!string(this.color) ~ ", division: " ~ std.conv.to!string(this.division) ~ ", flags: " ~ std.conv.to!string(this.flags) ~ ")";
        }

    }

    class Remove : Java393Packet
    {

        enum typeof(action) ACTION = 1;

        enum string[] __fields = [];

        mixin Make;

        override string toString()
        {
            return "BossBar.Remove()";
        }

    }

    class UpdateHealth : Java393Packet
    {

        enum typeof(action) ACTION = 2;

        enum string[] __fields = ["health"];

        float health;

        this() pure nothrow @safe @nogc {}

        this(float health) pure nothrow @safe @nogc
        {
            this.health = health;
        }

        mixin Make;

        override string toString()
        {
            return "BossBar.UpdateHealth(health: " ~ std.conv.to!string(this.health) ~ ")";
        }

    }

    class UpdateTitle : Java393Packet
    {

        enum typeof(action) ACTION = 3;

        enum string[] __fields = ["title"];

        string title;

        this() pure nothrow @safe @nogc {}

        this(string title) pure nothrow @safe @nogc
        {
            this.title = title;
        }

        mixin Make;

        override string toString()
        {
            return "BossBar.UpdateTitle(title: " ~ std.conv.to!string(this.title) ~ ")";
        }

    }

    class UpdateStyle : Java393Packet
    {

        enum typeof(action) ACTION = 4;

        // color
        enum uint PINK = 0;
        enum uint BLUE = 1;
        enum uint RED = 2;
        enum uint GREEN = 3;
        enum uint YELLOW = 4;
        enum uint PURPLE = 5;
        enum uint WHITE = 6;

        // division
        enum uint NO_DIVISION = 0;
        enum uint SIX_NOTCHES = 1;
        enum uint TEN_NOTCHES = 2;
        enum uint TWELVE_NOTCHES = 3;
        enum uint TWENTY_NOTCHES = 4;

        enum string[] __fields = ["color", "division"];

        @Var uint color;
        @Var uint division;

        this() pure nothrow @safe @nogc {}

        this(uint color, uint division=uint.init) pure nothrow @safe @nogc
        {
            this.color = color;
            this.division = division;
        }

        mixin Make;

        override string toString()
        {
            return "BossBar.UpdateStyle(color: " ~ std.conv.to!string(this.color) ~ ", division: " ~ std.conv.to!string(this.division) ~ ")";
        }

    }

    class UpdateFlags : Java393Packet
    {

        enum typeof(action) ACTION = 5;

        // flags
        enum ubyte DARK_SKY = 1;
        enum ubyte IS_DRAGON_BAR = 2;

        enum string[] __fields = ["flags"];

        ubyte flags;

        this() pure nothrow @safe @nogc {}

        this(ubyte flags) pure nothrow @safe @nogc
        {
            this.flags = flags;
        }

        mixin Make;

        override string toString()
        {
            return "BossBar.UpdateFlags(flags: " ~ std.conv.to!string(this.flags) ~ ")";
        }

    }

}

class ServerDifficulty : Java393Packet
{

    enum uint ID = 13;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    // difficulty
    enum ubyte PEACEFUL = 0;
    enum ubyte EASY = 1;
    enum ubyte NORMAL = 2;
    enum ubyte HARD = 3;

    enum string[] __fields = ["difficulty"];

    ubyte difficulty;

    this() pure nothrow @safe @nogc {}

    this(ubyte difficulty) pure nothrow @safe @nogc
    {
        this.difficulty = difficulty;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        ServerDifficulty ret = new ServerDifficulty();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "ServerDifficulty(difficulty: " ~ std.conv.to!string(this.difficulty) ~ ")";
    }

}

class ChatMessage : Java393Packet
{

    enum uint ID = 14;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    // position
    enum ubyte CHAT = 0;
    enum ubyte SYSTEM_MESSAGE = 1;
    enum ubyte ABOVE_HOTBAR = 2;

    enum string[] __fields = ["message", "position"];

    string message;
    ubyte position;

    this() pure nothrow @safe @nogc {}

    this(string message, ubyte position=ubyte.init) pure nothrow @safe @nogc
    {
        this.message = message;
        this.position = position;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        ChatMessage ret = new ChatMessage();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "ChatMessage(message: " ~ std.conv.to!string(this.message) ~ ", position: " ~ std.conv.to!string(this.position) ~ ")";
    }

}

class MultiBlockChange : Java393Packet
{

    enum uint ID = 15;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    enum string[] __fields = ["chunk", "changes"];

    Vector!(int, "xz") chunk;
    soupply.java393.types.BlockChange[] changes;

    this() pure nothrow @safe @nogc {}

    this(Vector!(int, "xz") chunk, soupply.java393.types.BlockChange[] changes=(soupply.java393.types.BlockChange[]).init) pure nothrow @safe @nogc
    {
        this.chunk = chunk;
        this.changes = changes;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        MultiBlockChange ret = new MultiBlockChange();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "MultiBlockChange(chunk: " ~ std.conv.to!string(this.chunk) ~ ", changes: " ~ std.conv.to!string(this.changes) ~ ")";
    }

}

class TabComplete : Java393Packet
{

    enum uint ID = 16;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    enum string[] __fields = ["transactionId", "start", "end", "matches"];

    @Var uint transactionId;
    @Var uint start;
    @Var uint end;
    soupply.java393.types.Match[] matches;

    this() pure nothrow @safe @nogc {}

    this(uint transactionId, uint start=uint.init, uint end=uint.init, soupply.java393.types.Match[] matches=(soupply.java393.types.Match[]).init) pure nothrow @safe @nogc
    {
        this.transactionId = transactionId;
        this.start = start;
        this.end = end;
        this.matches = matches;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        TabComplete ret = new TabComplete();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "TabComplete(transactionId: " ~ std.conv.to!string(this.transactionId) ~ ", start: " ~ std.conv.to!string(this.start) ~ ", end: " ~ std.conv.to!string(this.end) ~ ", matches: " ~ std.conv.to!string(this.matches) ~ ")";
    }

}

class DeclareCommands : Java393Packet
{

    enum uint ID = 17;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    enum string[] __fields = ["nodes", "rootIndex"];

    soupply.java393.types.Node[] nodes;
    @Var uint rootIndex;

    this() pure nothrow @safe @nogc {}

    this(soupply.java393.types.Node[] nodes, uint rootIndex=uint.init) pure nothrow @safe @nogc
    {
        this.nodes = nodes;
        this.rootIndex = rootIndex;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        DeclareCommands ret = new DeclareCommands();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "DeclareCommands(nodes: " ~ std.conv.to!string(this.nodes) ~ ", rootIndex: " ~ std.conv.to!string(this.rootIndex) ~ ")";
    }

}

class ConfirmTransaction : Java393Packet
{

    enum uint ID = 18;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    enum string[] __fields = ["window", "action", "accepted"];

    ubyte window;
    ushort action;
    bool accepted;

    this() pure nothrow @safe @nogc {}

    this(ubyte window, ushort action=ushort.init, bool accepted=bool.init) pure nothrow @safe @nogc
    {
        this.window = window;
        this.action = action;
        this.accepted = accepted;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        ConfirmTransaction ret = new ConfirmTransaction();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "ConfirmTransaction(window: " ~ std.conv.to!string(this.window) ~ ", action: " ~ std.conv.to!string(this.action) ~ ", accepted: " ~ std.conv.to!string(this.accepted) ~ ")";
    }

}

class CloseWindow : Java393Packet
{

    enum uint ID = 19;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    enum string[] __fields = ["window"];

    ubyte window;

    this() pure nothrow @safe @nogc {}

    this(ubyte window) pure nothrow @safe @nogc
    {
        this.window = window;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        CloseWindow ret = new CloseWindow();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "CloseWindow(window: " ~ std.conv.to!string(this.window) ~ ")";
    }

}

class OpenWindow : Java393Packet
{

    enum uint ID = 20;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    enum string[] __fields = ["window", "type", "title", "slots"];

    ubyte window;
    string type;
    string title;
    ubyte slots;

    this() pure nothrow @safe @nogc {}

    this(ubyte window, string type=string.init, string title=string.init, ubyte slots=ubyte.init) pure nothrow @safe @nogc
    {
        this.window = window;
        this.type = type;
        this.title = title;
        this.slots = slots;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        OpenWindow ret = new OpenWindow();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "OpenWindow(window: " ~ std.conv.to!string(this.window) ~ ", type: " ~ std.conv.to!string(this.type) ~ ", title: " ~ std.conv.to!string(this.title) ~ ", slots: " ~ std.conv.to!string(this.slots) ~ ")";
    }

}

class WindowItems : Java393Packet
{

    enum uint ID = 21;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    enum string[] __fields = ["window", "slots"];

    ubyte window;
    @Length!ushort soupply.java393.types.Slot[] slots;

    this() pure nothrow @safe @nogc {}

    this(ubyte window, soupply.java393.types.Slot[] slots=(soupply.java393.types.Slot[]).init) pure nothrow @safe @nogc
    {
        this.window = window;
        this.slots = slots;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        WindowItems ret = new WindowItems();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "WindowItems(window: " ~ std.conv.to!string(this.window) ~ ", slots: " ~ std.conv.to!string(this.slots) ~ ")";
    }

}

class WindowProperty : Java393Packet
{

    enum uint ID = 22;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    // property
    enum ushort FURNANCE_FIRE_ICON = 0;
    enum ushort FURNACE_MAX_FUEL_BURN_TIME = 1;
    enum ushort FURNACE_PROGRESS_ARROW = 2;
    enum ushort FURNCE_MAX_PROGRESS = 3;
    enum ushort ENCHANTMENT_LEVEL_REQUIREMENT_TOP = 0;
    enum ushort ENCHANTMENT_LEVEL_REQUIREMENT_MIDDLE = 1;
    enum ushort ENCHANTMENT_LEVEL_REQUIREMENT_BOTTOM = 2;
    enum ushort ENCHANTMENT_SEED = 3;
    enum ushort ENCHANTMENT_ID_TOP = 4;
    enum ushort ENCHANTMENT_ID_MIDDLE = 5;
    enum ushort ENCHANTMENT_ID_BOTTOM = 6;
    enum ushort ENCHANTMENT_LEVEL_TOP = 7;
    enum ushort ENCHANTMENT_LEVEL_MIDDLE = 8;
    enum ushort ENCHANTMENT_LEVEL_BOTTOM = 9;
    enum ushort BEACON_POWER_LEVEL = 0;
    enum ushort BEACON_FIRST_EFFECT = 1;
    enum ushort BEACON_SECOND_EFFECT = 2;
    enum ushort ANVIL_REPAIR_COST = 0;
    enum ushort BREWING_STAND_BREW_TIME = 0;

    enum string[] __fields = ["window", "property", "value"];

    ubyte window;
    ushort property;
    short value;

    this() pure nothrow @safe @nogc {}

    this(ubyte window, ushort property=ushort.init, short value=short.init) pure nothrow @safe @nogc
    {
        this.window = window;
        this.property = property;
        this.value = value;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        WindowProperty ret = new WindowProperty();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "WindowProperty(window: " ~ std.conv.to!string(this.window) ~ ", property: " ~ std.conv.to!string(this.property) ~ ", value: " ~ std.conv.to!string(this.value) ~ ")";
    }

}

class SetSlot : Java393Packet
{

    enum uint ID = 23;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    enum string[] __fields = ["window", "slot", "item"];

    ubyte window;
    ushort slot;
    soupply.java393.types.Slot item;

    this() pure nothrow @safe @nogc {}

    this(ubyte window, ushort slot=ushort.init, soupply.java393.types.Slot item=soupply.java393.types.Slot.init) pure nothrow @safe @nogc
    {
        this.window = window;
        this.slot = slot;
        this.item = item;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        SetSlot ret = new SetSlot();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "SetSlot(window: " ~ std.conv.to!string(this.window) ~ ", slot: " ~ std.conv.to!string(this.slot) ~ ", item: " ~ std.conv.to!string(this.item) ~ ")";
    }

}

class SetCooldown : Java393Packet
{

    enum uint ID = 24;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    enum string[] __fields = ["item", "cooldown"];

    @Var uint item;
    @Var uint cooldown;

    this() pure nothrow @safe @nogc {}

    this(uint item, uint cooldown=uint.init) pure nothrow @safe @nogc
    {
        this.item = item;
        this.cooldown = cooldown;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        SetCooldown ret = new SetCooldown();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "SetCooldown(item: " ~ std.conv.to!string(this.item) ~ ", cooldown: " ~ std.conv.to!string(this.cooldown) ~ ")";
    }

}

class PluginMessage : Java393Packet
{

    enum uint ID = 25;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    enum string[] __fields = ["channel", "data"];

    string channel;
    @Bytes ubyte[] data;

    this() pure nothrow @safe @nogc {}

    this(string channel, ubyte[] data=(ubyte[]).init) pure nothrow @safe @nogc
    {
        this.channel = channel;
        this.data = data;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        PluginMessage ret = new PluginMessage();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "PluginMessage(channel: " ~ std.conv.to!string(this.channel) ~ ", data: " ~ std.conv.to!string(this.data) ~ ")";
    }

}

class NamedSoundEffect : Java393Packet
{

    enum uint ID = 26;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    enum string[] __fields = ["name", "category", "position", "volume", "pitch"];

    string name;
    @Var uint category;
    Vector!(int, "xyz") position;
    float volume;
    float pitch;

    this() pure nothrow @safe @nogc {}

    this(string name, uint category=uint.init, Vector!(int, "xyz") position=Vector!(int, "xyz").init, float volume=float.init, float pitch=float.init) pure nothrow @safe @nogc
    {
        this.name = name;
        this.category = category;
        this.position = position;
        this.volume = volume;
        this.pitch = pitch;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        NamedSoundEffect ret = new NamedSoundEffect();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "NamedSoundEffect(name: " ~ std.conv.to!string(this.name) ~ ", category: " ~ std.conv.to!string(this.category) ~ ", position: " ~ std.conv.to!string(this.position) ~ ", volume: " ~ std.conv.to!string(this.volume) ~ ", pitch: " ~ std.conv.to!string(this.pitch) ~ ")";
    }

}

class Disconnect : Java393Packet
{

    enum uint ID = 27;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    enum string[] __fields = ["reason"];

    string reason;

    this() pure nothrow @safe @nogc {}

    this(string reason) pure nothrow @safe @nogc
    {
        this.reason = reason;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        Disconnect ret = new Disconnect();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "Disconnect(reason: " ~ std.conv.to!string(this.reason) ~ ")";
    }

}

class EntityStatus : Java393Packet
{

    enum uint ID = 28;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    // status
    enum ubyte SPAWN_TIPPED_ARROW_PARTICLE_EFFECTS = 0;
    enum ubyte PLAY_JUMPING_ANIMATION_AND_PARTICLES = 1;
    enum ubyte RESET_SPAWNER_DELAY = 1;
    enum ubyte PLAY_HURT_ANIMATION_AND_SOUND = 2;
    enum ubyte PLAY_DEATH_ANIMATION_AND_SOUND = 3;
    enum ubyte PLAY_ATTACK_ANIMATION_AND_SOUND = 4;
    enum ubyte SPAWN_SMOKE_PARTICLES = 6;
    enum ubyte SPAWN_HEART_PARTICLES = 7;
    enum ubyte PLAY_SHAKING_WATER_ANIMATION = 8;
    enum ubyte FINISHED_CONSUMING = 9;
    enum ubyte PLAY_EATING_GRASS_ANIMATION = 10;
    enum ubyte IGNITE_MINECART_TNT = 10;
    enum ubyte HOLD_POPPY = 11;
    enum ubyte SPAWN_VILLAGER_MATING_HEART_PARTICLES = 12;
    enum ubyte SPAWN_VILLAGER_ANGRY_PARTICLES = 13;
    enum ubyte SPAWN_VILLAGER_HAPPY_PARTICLES = 14;
    enum ubyte SPAWN_WITCH_MAGIC_PARTICLES = 15;
    enum ubyte PLAY_ZOMBIE_CURE_FINISHED_SOUND = 16;
    enum ubyte SPAWN_FIREWORK_EXPLOSION_EFFECT = 17;
    enum ubyte SPAWN_LOVE_PARTICLES = 18;
    enum ubyte RESET_SQUID_ROTATION = 19;
    enum ubyte SPAWN_EXPLOSION_PARTICLES = 20;
    enum ubyte PLAY_GUARDIAN_SOUND_EFFECT = 21;
    enum ubyte ENABLE_REDUCED_DEBUG_SCREEN = 22;
    enum ubyte DISABLE_REDUCED_DEBUG_SCREEN = 23;
    enum ubyte SET_OP_PERMISSION_LEVEL_0 = 24;
    enum ubyte SET_OP_PERMISSION_LEVEL_1 = 25;
    enum ubyte SET_OP_PERMISSION_LEVEL_2 = 26;
    enum ubyte SET_OP_PERMISSION_LEVEL_3 = 27;
    enum ubyte SET_OP_PERMISSION_LEVEL_4 = 28;
    enum ubyte PLAY_SHIELD_BLOCK_SOUND = 29;
    enum ubyte PLAY_SHIELD_BREAK_SOUND = 30;
    enum ubyte HOOK_KNOCKBACK = 31;
    enum ubyte PLAY_HIT_SOUND = 32;
    enum ubyte PLAY_THORNS_HURT_ANIMATION_AND_SOUND = 33;
    enum ubyte REMOVE_POPPY = 34;
    enum ubyte PLAY_TOTEM_UNDYING_ANIMATION = 35;

    enum string[] __fields = ["entityId", "status"];

    uint entityId;
    ubyte status;

    this() pure nothrow @safe @nogc {}

    this(uint entityId, ubyte status=ubyte.init) pure nothrow @safe @nogc
    {
        this.entityId = entityId;
        this.status = status;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        EntityStatus ret = new EntityStatus();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "EntityStatus(entityId: " ~ std.conv.to!string(this.entityId) ~ ", status: " ~ std.conv.to!string(this.status) ~ ")";
    }

}

class NbtQueryResponse : Java393Packet
{

    enum uint ID = 29;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    enum string[] __fields = ["transactionId", "nbt"];

    @Var uint transactionId;
    @Bytes ubyte[] nbt;

    this() pure nothrow @safe @nogc {}

    this(uint transactionId, ubyte[] nbt=(ubyte[]).init) pure nothrow @safe @nogc
    {
        this.transactionId = transactionId;
        this.nbt = nbt;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        NbtQueryResponse ret = new NbtQueryResponse();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "NbtQueryResponse(transactionId: " ~ std.conv.to!string(this.transactionId) ~ ", nbt: " ~ std.conv.to!string(this.nbt) ~ ")";
    }

}

class Explosion : Java393Packet
{

    enum uint ID = 30;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    enum string[] __fields = ["position", "radius", "records", "motion"];

    Vector!(float, "xyz") position;
    float radius;
    @Length!uint Vector!(byte, "xyz")[] records;
    Vector!(float, "xyz") motion;

    this() pure nothrow @safe @nogc {}

    this(Vector!(float, "xyz") position, float radius=float.init, Vector!(byte, "xyz")[] records=(Vector!(byte, "xyz")[]).init, Vector!(float, "xyz") motion=Vector!(float, "xyz").init) pure nothrow @safe @nogc
    {
        this.position = position;
        this.radius = radius;
        this.records = records;
        this.motion = motion;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        Explosion ret = new Explosion();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "Explosion(position: " ~ std.conv.to!string(this.position) ~ ", radius: " ~ std.conv.to!string(this.radius) ~ ", records: " ~ std.conv.to!string(this.records) ~ ", motion: " ~ std.conv.to!string(this.motion) ~ ")";
    }

}

class UnloadChunk : Java393Packet
{

    enum uint ID = 31;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    enum string[] __fields = ["position"];

    Vector!(int, "xz") position;

    this() pure nothrow @safe @nogc {}

    this(Vector!(int, "xz") position) pure nothrow @safe @nogc
    {
        this.position = position;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        UnloadChunk ret = new UnloadChunk();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "UnloadChunk(position: " ~ std.conv.to!string(this.position) ~ ")";
    }

}

class ChangeGameState : Java393Packet
{

    enum uint ID = 32;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    // reason
    enum ubyte INVALID_BED = 0;
    enum ubyte END_RAINING = 1;
    enum ubyte BEGIN_RAINING = 2;
    enum ubyte CHANGE_GAMEMODE = 3;
    enum ubyte EXIT_END = 4;
    enum ubyte DEMO_MESSAGE = 5;
    enum ubyte ARROW_HITTING_PLAYER = 6;
    enum ubyte FADE_VALUE = 7;
    enum ubyte FADE_TIME = 8;
    enum ubyte PLAY_ELDER_GUARDIAN_MOB_APPEARANCE = 10;

    // value
    enum float SURVIVAL = 0;
    enum float CREATIVE = 1;
    enum float ADVENTURE = 2;
    enum float SPECTATOR = 3;
    enum float RESPAWN_IMMEDIATELY = 0;
    enum float RESPAWN_AFTER_CREDITS = 1;
    enum float SHOW_DEMO_SCREEN = 0;
    enum float TELL_MOVEMENT_CONTROLS = 101;
    enum float TELL_JUMP_CONTROLS = 102;
    enum float TELL_INVENTORY_CONTROLS = 103;
    enum float BRIGHT = 0;
    enum float DARK = 1;

    enum string[] __fields = ["reason", "value"];

    ubyte reason;
    float value;

    this() pure nothrow @safe @nogc {}

    this(ubyte reason, float value=float.init) pure nothrow @safe @nogc
    {
        this.reason = reason;
        this.value = value;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        ChangeGameState ret = new ChangeGameState();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "ChangeGameState(reason: " ~ std.conv.to!string(this.reason) ~ ", value: " ~ std.conv.to!string(this.value) ~ ")";
    }

}

class KeepAlive : Java393Packet
{

    enum uint ID = 33;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    enum string[] __fields = ["id"];

    long id;

    this() pure nothrow @safe @nogc {}

    this(long id) pure nothrow @safe @nogc
    {
        this.id = id;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        KeepAlive ret = new KeepAlive();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "KeepAlive(id: " ~ std.conv.to!string(this.id) ~ ")";
    }

}

class ChunkData : Java393Packet
{

    enum uint ID = 34;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    enum string[] __fields = ["position", "full", "sections", "data", "tilesCount", "tiles"];

    Vector!(int, "xz") position;
    bool full;
    @Var uint sections;
    ubyte[] data;
    @Var uint tilesCount;
    @Bytes ubyte[] tiles;

    this() pure nothrow @safe @nogc {}

    this(Vector!(int, "xz") position, bool full=bool.init, uint sections=uint.init, ubyte[] data=(ubyte[]).init, uint tilesCount=uint.init, ubyte[] tiles=(ubyte[]).init) pure nothrow @safe @nogc
    {
        this.position = position;
        this.full = full;
        this.sections = sections;
        this.data = data;
        this.tilesCount = tilesCount;
        this.tiles = tiles;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        ChunkData ret = new ChunkData();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "ChunkData(position: " ~ std.conv.to!string(this.position) ~ ", full: " ~ std.conv.to!string(this.full) ~ ", sections: " ~ std.conv.to!string(this.sections) ~ ", data: " ~ std.conv.to!string(this.data) ~ ", tilesCount: " ~ std.conv.to!string(this.tilesCount) ~ ", tiles: " ~ std.conv.to!string(this.tiles) ~ ")";
    }

}

class Effect : Java393Packet
{

    enum uint ID = 35;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    // effect id
    enum uint DISPENSER_DISPENSE = 1000;
    enum uint DISPENSER_FAIL_DISPENSE = 1001;
    enum uint DISPENSER_SHOOT = 1002;
    enum uint ENDER_EYE_LAUNCH = 1003;
    enum uint FIREWORK_SHOT = 1004;
    enum uint IRON_DOOR_OPEN = 1005;
    enum uint WOODEN_DOOR_OPEN = 1006;
    enum uint WOODEN_TRAPDOOR_OPEN = 1007;
    enum uint FENCE_GATE_OPEN = 1008;
    enum uint FIRE_EXTINGUISH = 1009;
    enum uint PLAY_RECORD = 1010;
    enum uint IRON_DOOR_CLOSE = 1011;
    enum uint WOODEN_DOOR_CLOSE = 1012;
    enum uint WOODEN_TRAPDOOR_CLOSE = 1013;
    enum uint FENCE_GATE_CLOSE = 1014;
    enum uint GHAST_WARN = 1015;
    enum uint GHAST_SHOOT = 1016;
    enum uint ENDERDRAGON_SHOOT = 1017;
    enum uint BLAZE_SHOOT = 1018;
    enum uint ZOMBIE_ATTACK_WOOD_DOOR = 1019;
    enum uint ZOMBIE_ATTACK_IRON_DOOR = 1020;
    enum uint ZOMBIE_BREAK_WOOD_DOOR = 1021;
    enum uint WITHER_BREAK_BLOCK = 1022;
    enum uint WITHER_SPAWN = 1023;
    enum uint WITHER_SHOOT = 1024;
    enum uint BAT_TAKE_OFF = 1025;
    enum uint ZOMBIE_INFECT_VILLAGER = 1026;
    enum uint ZOMBIE_VILLAGER_CONVERT = 1027;
    enum uint ENDER_DRAGON_BREATH = 1028;
    enum uint ANVIL_BREAK = 1029;
    enum uint ANVIL_USE = 1030;
    enum uint ANVIL_LAND = 1031;
    enum uint PORTAL_TRAVEL = 1032;
    enum uint CHORUS_FLOWER_GROW = 1033;
    enum uint CHORUS_FLOWER_DIE = 1034;
    enum uint BREWING_STAND_BREW = 1035;
    enum uint IRON_TRAPDOOR_OPEN = 1036;
    enum uint IRON_TRAPDOOR_CLOSE = 1037;
    enum uint SPAWN_10_SMOKE_PARTICLES = 2000;
    enum uint BREAK_BREAK_PARTICLES_AND_SOUND = 2001;
    enum uint SPLASH_POTION_PARTICLES_AND_SOUND = 2002;
    enum uint ENDER_EYE_BREAK_PARTICLES_AND_SOUND = 2003;
    enum uint MOB_SPAWN_PARTICLES = 2004;
    enum uint BONEMEAL_PARTICLES = 2005;
    enum uint DRAGON_BREATH = 2006;
    enum uint END_GATEWAY_SPAWN = 3000;
    enum uint ENDERDRAGON_GROWL = 3001;

    enum string[] __fields = ["effectId", "position", "data", "disableVolume"];

    uint effectId;
    ulong position;
    uint data;
    bool disableVolume;

    this() pure nothrow @safe @nogc {}

    this(uint effectId, ulong position=ulong.init, uint data=uint.init, bool disableVolume=bool.init) pure nothrow @safe @nogc
    {
        this.effectId = effectId;
        this.position = position;
        this.data = data;
        this.disableVolume = disableVolume;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        Effect ret = new Effect();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "Effect(effectId: " ~ std.conv.to!string(this.effectId) ~ ", position: " ~ std.conv.to!string(this.position) ~ ", data: " ~ std.conv.to!string(this.data) ~ ", disableVolume: " ~ std.conv.to!string(this.disableVolume) ~ ")";
    }

}

class SpawnParticle : Java393Packet
{

    enum uint ID = 36;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    // particle id
    enum uint EXPLODE = 0;
    enum uint LARGE_EXPLOSION = 1;
    enum uint HUGE_EXPLOSION = 2;
    enum uint FIREWORK_SPARK = 3;
    enum uint BUBBLE = 4;
    enum uint SPLASH = 5;
    enum uint WAKE = 6;
    enum uint SUSPENDED = 7;
    enum uint DEPTH_SUSPEND = 8;
    enum uint CRIT = 9;
    enum uint MAGIC_CRIT = 10;
    enum uint SMOKE = 11;
    enum uint LARGE_SMOKE = 12;
    enum uint SPELL = 13;
    enum uint INSTANT_SPELL = 14;
    enum uint MOB_SPELL = 15;
    enum uint MOB_SPELL_AMBIENT = 16;
    enum uint WITCH_MAGIC = 17;
    enum uint DRIP_WATER = 18;
    enum uint DRIP_LAVA = 19;
    enum uint ANGRY_VILLAGER = 20;
    enum uint HAPPY_VILLAGER = 21;
    enum uint TOWN_AURA = 22;
    enum uint NOTE = 23;
    enum uint PORTAL = 24;
    enum uint ENCHANTMENT_TABLE = 25;
    enum uint FLAME = 26;
    enum uint LAVA = 27;
    enum uint FOOTSTEP = 28;
    enum uint CLOUD = 29;
    enum uint RED_DUST = 30;
    enum uint SNOWBALL_POOF = 31;
    enum uint SNOW_SHOVEL = 32;
    enum uint SLIME = 33;
    enum uint HEART = 34;
    enum uint BARRIER = 35;
    enum uint ITEM_CRACK = 36;
    enum uint BLOCK_CRACK = 37;
    enum uint BLOCK_DUST = 38;
    enum uint DROPLET = 39;
    enum uint TAKE = 40;
    enum uint MOB_APPEARANCE = 41;
    enum uint DRAGON_BREATH = 42;
    enum uint ENDROD = 43;
    enum uint DAMAGE_INDICATOR = 44;
    enum uint SWEEP_ATTACK = 45;
    enum uint FALLING_DUST = 46;

    enum string[] __fields = ["particleId", "longDistance", "position", "offset", "data", "count", "additionalData"];

    uint particleId;
    bool longDistance;
    Vector!(float, "xyz") position;
    Vector!(float, "xyz") offset;
    float data;
    uint count;
    @Bytes ubyte[] additionalData;

    this() pure nothrow @safe @nogc {}

    this(uint particleId, bool longDistance=bool.init, Vector!(float, "xyz") position=Vector!(float, "xyz").init, Vector!(float, "xyz") offset=Vector!(float, "xyz").init, float data=float.init, uint count=uint.init, ubyte[] additionalData=(ubyte[]).init) pure nothrow @safe @nogc
    {
        this.particleId = particleId;
        this.longDistance = longDistance;
        this.position = position;
        this.offset = offset;
        this.data = data;
        this.count = count;
        this.additionalData = additionalData;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        SpawnParticle ret = new SpawnParticle();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "SpawnParticle(particleId: " ~ std.conv.to!string(this.particleId) ~ ", longDistance: " ~ std.conv.to!string(this.longDistance) ~ ", position: " ~ std.conv.to!string(this.position) ~ ", offset: " ~ std.conv.to!string(this.offset) ~ ", data: " ~ std.conv.to!string(this.data) ~ ", count: " ~ std.conv.to!string(this.count) ~ ", additionalData: " ~ std.conv.to!string(this.additionalData) ~ ")";
    }

}

class JoinGame : Java393Packet
{

    enum uint ID = 37;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    // gamemode
    enum ubyte SURVIVAL = 0;
    enum ubyte CREATIVE = 1;
    enum ubyte ADVENTURE = 2;
    enum ubyte SPECTATOR = 3;

    // dimension
    enum int NETHER = -1;
    enum int OVERWORLD = 0;
    enum int END = 1;

    // difficulty
    enum ubyte PEACEFUL = 0;
    enum ubyte EASY = 1;
    enum ubyte NORMAL = 2;
    enum ubyte HARD = 3;

    // level type
    enum string INFINITY = "default";
    enum string FLAT = "flat";
    enum string AMPLIFIED = "amplified";
    enum string LARGE_BIOMES = "largeBiomes";

    enum string[] __fields = ["entityId", "gamemode", "dimension", "difficulty", "maxPlayers", "levelType", "reducedDebug"];

    uint entityId;
    ubyte gamemode;
    int dimension;
    ubyte difficulty;
    ubyte maxPlayers;
    string levelType;
    bool reducedDebug;

    this() pure nothrow @safe @nogc {}

    this(uint entityId, ubyte gamemode=ubyte.init, int dimension=int.init, ubyte difficulty=ubyte.init, ubyte maxPlayers=ubyte.init, string levelType=string.init, bool reducedDebug=bool.init) pure nothrow @safe @nogc
    {
        this.entityId = entityId;
        this.gamemode = gamemode;
        this.dimension = dimension;
        this.difficulty = difficulty;
        this.maxPlayers = maxPlayers;
        this.levelType = levelType;
        this.reducedDebug = reducedDebug;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        JoinGame ret = new JoinGame();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "JoinGame(entityId: " ~ std.conv.to!string(this.entityId) ~ ", gamemode: " ~ std.conv.to!string(this.gamemode) ~ ", dimension: " ~ std.conv.to!string(this.dimension) ~ ", difficulty: " ~ std.conv.to!string(this.difficulty) ~ ", maxPlayers: " ~ std.conv.to!string(this.maxPlayers) ~ ", levelType: " ~ std.conv.to!string(this.levelType) ~ ", reducedDebug: " ~ std.conv.to!string(this.reducedDebug) ~ ")";
    }

}

class Map : Java393Packet
{

    enum uint ID = 38;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    enum string[] __fields = ["mapId", "scale", "showIcons", "icons", "colums", "rows", "offset", "data"];

    @Var uint mapId;
    ubyte scale;
    bool showIcons;
    soupply.java393.types.Icon[] icons;
    ubyte colums;
    ubyte rows;
    Vector!(ubyte, "xz") offset;
    ubyte[] data;

    this() pure nothrow @safe @nogc {}

    this(uint mapId, ubyte scale=ubyte.init, bool showIcons=bool.init, soupply.java393.types.Icon[] icons=(soupply.java393.types.Icon[]).init, ubyte colums=ubyte.init, ubyte rows=ubyte.init, Vector!(ubyte, "xz") offset=Vector!(ubyte, "xz").init, ubyte[] data=(ubyte[]).init) pure nothrow @safe @nogc
    {
        this.mapId = mapId;
        this.scale = scale;
        this.showIcons = showIcons;
        this.icons = icons;
        this.colums = colums;
        this.rows = rows;
        this.offset = offset;
        this.data = data;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        Map ret = new Map();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "Map(mapId: " ~ std.conv.to!string(this.mapId) ~ ", scale: " ~ std.conv.to!string(this.scale) ~ ", showIcons: " ~ std.conv.to!string(this.showIcons) ~ ", icons: " ~ std.conv.to!string(this.icons) ~ ", colums: " ~ std.conv.to!string(this.colums) ~ ", rows: " ~ std.conv.to!string(this.rows) ~ ", offset: " ~ std.conv.to!string(this.offset) ~ ", data: " ~ std.conv.to!string(this.data) ~ ")";
    }

}

class Entity : Java393Packet
{

    enum uint ID = 39;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    enum string[] __fields = ["entityId"];

    @Var uint entityId;

    this() pure nothrow @safe @nogc {}

    this(uint entityId) pure nothrow @safe @nogc
    {
        this.entityId = entityId;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        Entity ret = new Entity();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "Entity(entityId: " ~ std.conv.to!string(this.entityId) ~ ")";
    }

}

class EntityRelativeMove : Java393Packet
{

    enum uint ID = 40;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    enum string[] __fields = ["entityId", "delta", "onGround"];

    @Var uint entityId;
    Vector!(short, "xyz") delta;
    bool onGround;

    this() pure nothrow @safe @nogc {}

    this(uint entityId, Vector!(short, "xyz") delta=Vector!(short, "xyz").init, bool onGround=bool.init) pure nothrow @safe @nogc
    {
        this.entityId = entityId;
        this.delta = delta;
        this.onGround = onGround;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        EntityRelativeMove ret = new EntityRelativeMove();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "EntityRelativeMove(entityId: " ~ std.conv.to!string(this.entityId) ~ ", delta: " ~ std.conv.to!string(this.delta) ~ ", onGround: " ~ std.conv.to!string(this.onGround) ~ ")";
    }

}

class EntityLookAndRelativeMove : Java393Packet
{

    enum uint ID = 41;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    enum string[] __fields = ["entityId", "delta", "yaw", "pitch", "onGround"];

    @Var uint entityId;
    Vector!(short, "xyz") delta;
    ubyte yaw;
    ubyte pitch;
    bool onGround;

    this() pure nothrow @safe @nogc {}

    this(uint entityId, Vector!(short, "xyz") delta=Vector!(short, "xyz").init, ubyte yaw=ubyte.init, ubyte pitch=ubyte.init, bool onGround=bool.init) pure nothrow @safe @nogc
    {
        this.entityId = entityId;
        this.delta = delta;
        this.yaw = yaw;
        this.pitch = pitch;
        this.onGround = onGround;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        EntityLookAndRelativeMove ret = new EntityLookAndRelativeMove();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "EntityLookAndRelativeMove(entityId: " ~ std.conv.to!string(this.entityId) ~ ", delta: " ~ std.conv.to!string(this.delta) ~ ", yaw: " ~ std.conv.to!string(this.yaw) ~ ", pitch: " ~ std.conv.to!string(this.pitch) ~ ", onGround: " ~ std.conv.to!string(this.onGround) ~ ")";
    }

}

class EntityLook : Java393Packet
{

    enum uint ID = 42;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    enum string[] __fields = ["entityId", "yaw", "pitch", "onGround"];

    @Var uint entityId;
    ubyte yaw;
    ubyte pitch;
    bool onGround;

    this() pure nothrow @safe @nogc {}

    this(uint entityId, ubyte yaw=ubyte.init, ubyte pitch=ubyte.init, bool onGround=bool.init) pure nothrow @safe @nogc
    {
        this.entityId = entityId;
        this.yaw = yaw;
        this.pitch = pitch;
        this.onGround = onGround;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        EntityLook ret = new EntityLook();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "EntityLook(entityId: " ~ std.conv.to!string(this.entityId) ~ ", yaw: " ~ std.conv.to!string(this.yaw) ~ ", pitch: " ~ std.conv.to!string(this.pitch) ~ ", onGround: " ~ std.conv.to!string(this.onGround) ~ ")";
    }

}

class VehicleMove : Java393Packet
{

    enum uint ID = 43;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    enum string[] __fields = ["position", "yaw", "pitch"];

    Vector!(double, "xyz") position;
    float yaw;
    float pitch;

    this() pure nothrow @safe @nogc {}

    this(Vector!(double, "xyz") position, float yaw=float.init, float pitch=float.init) pure nothrow @safe @nogc
    {
        this.position = position;
        this.yaw = yaw;
        this.pitch = pitch;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        VehicleMove ret = new VehicleMove();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "VehicleMove(position: " ~ std.conv.to!string(this.position) ~ ", yaw: " ~ std.conv.to!string(this.yaw) ~ ", pitch: " ~ std.conv.to!string(this.pitch) ~ ")";
    }

}

class OpenSignEditor : Java393Packet
{

    enum uint ID = 44;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    enum string[] __fields = ["position"];

    ulong position;

    this() pure nothrow @safe @nogc {}

    this(ulong position) pure nothrow @safe @nogc
    {
        this.position = position;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        OpenSignEditor ret = new OpenSignEditor();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "OpenSignEditor(position: " ~ std.conv.to!string(this.position) ~ ")";
    }

}

class CraftRecipeResponse : Java393Packet
{

    enum uint ID = 45;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    enum string[] __fields = ["window", "recipe"];

    ubyte window;
    @Var uint recipe;

    this() pure nothrow @safe @nogc {}

    this(ubyte window, uint recipe=uint.init) pure nothrow @safe @nogc
    {
        this.window = window;
        this.recipe = recipe;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        CraftRecipeResponse ret = new CraftRecipeResponse();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "CraftRecipeResponse(window: " ~ std.conv.to!string(this.window) ~ ", recipe: " ~ std.conv.to!string(this.recipe) ~ ")";
    }

}

class PlayerAbilities : Java393Packet
{

    enum uint ID = 46;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    // flags
    enum ubyte INVULNERABLE = 1;
    enum ubyte FLYING = 2;
    enum ubyte ALLOW_FLYING = 4;
    enum ubyte CREATIVE_MODE = 8;

    enum string[] __fields = ["flags", "flyingSpeed", "fovModifier"];

    ubyte flags;
    float flyingSpeed;
    float fovModifier;

    this() pure nothrow @safe @nogc {}

    this(ubyte flags, float flyingSpeed=float.init, float fovModifier=float.init) pure nothrow @safe @nogc
    {
        this.flags = flags;
        this.flyingSpeed = flyingSpeed;
        this.fovModifier = fovModifier;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        PlayerAbilities ret = new PlayerAbilities();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "PlayerAbilities(flags: " ~ std.conv.to!string(this.flags) ~ ", flyingSpeed: " ~ std.conv.to!string(this.flyingSpeed) ~ ", fovModifier: " ~ std.conv.to!string(this.fovModifier) ~ ")";
    }

}

class CombatEvent : Java393Packet
{

    enum uint ID = 47;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    enum string[] __fields = ["eventId"];

    ubyte eventId;

    this() pure nothrow @safe @nogc {}

    this(ubyte eventId) pure nothrow @safe @nogc
    {
        this.eventId = eventId;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        CombatEvent ret = new CombatEvent();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "CombatEvent(eventId: " ~ std.conv.to!string(this.eventId) ~ ")";
    }

    enum string variantField = "eventId";

    alias Variants = TypeTuple!(EnterCombat, EndCombat, EntityDead);

    class EnterCombat : Java393Packet
    {

        enum typeof(eventId) EVENT_ID = 0;

        enum string[] __fields = [];

        mixin Make;

        override string toString()
        {
            return "CombatEvent.EnterCombat()";
        }

    }

    class EndCombat : Java393Packet
    {

        enum typeof(eventId) EVENT_ID = 1;

        enum string[] __fields = ["duration", "entityId"];

        @Var uint duration;
        uint entityId;

        this() pure nothrow @safe @nogc {}

        this(uint duration, uint entityId=uint.init) pure nothrow @safe @nogc
        {
            this.duration = duration;
            this.entityId = entityId;
        }

        mixin Make;

        override string toString()
        {
            return "CombatEvent.EndCombat(duration: " ~ std.conv.to!string(this.duration) ~ ", entityId: " ~ std.conv.to!string(this.entityId) ~ ")";
        }

    }

    class EntityDead : Java393Packet
    {

        enum typeof(eventId) EVENT_ID = 2;

        enum string[] __fields = ["playerId", "entityId", "message"];

        @Var uint playerId;
        uint entityId;
        string message;

        this() pure nothrow @safe @nogc {}

        this(uint playerId, uint entityId=uint.init, string message=string.init) pure nothrow @safe @nogc
        {
            this.playerId = playerId;
            this.entityId = entityId;
            this.message = message;
        }

        mixin Make;

        override string toString()
        {
            return "CombatEvent.EntityDead(playerId: " ~ std.conv.to!string(this.playerId) ~ ", entityId: " ~ std.conv.to!string(this.entityId) ~ ", message: " ~ std.conv.to!string(this.message) ~ ")";
        }

    }

}

class PlayerListItem : Java393Packet
{

    enum uint ID = 48;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    enum string[] __fields = ["action"];

    @Var uint action;

    this() pure nothrow @safe @nogc {}

    this(uint action) pure nothrow @safe @nogc
    {
        this.action = action;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        PlayerListItem ret = new PlayerListItem();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "PlayerListItem(action: " ~ std.conv.to!string(this.action) ~ ")";
    }

    enum string variantField = "action";

    alias Variants = TypeTuple!(AddPlayer, UpdateGamemode, UpdateLatency, UpdateDisplayName, RemovePlayer);

    class AddPlayer : Java393Packet
    {

        enum typeof(action) ACTION = 0;

        enum string[] __fields = ["players"];

        soupply.java393.types.ListAddPlayer[] players;

        this() pure nothrow @safe @nogc {}

        this(soupply.java393.types.ListAddPlayer[] players) pure nothrow @safe @nogc
        {
            this.players = players;
        }

        mixin Make;

        override string toString()
        {
            return "PlayerListItem.AddPlayer(players: " ~ std.conv.to!string(this.players) ~ ")";
        }

    }

    class UpdateGamemode : Java393Packet
    {

        enum typeof(action) ACTION = 1;

        enum string[] __fields = ["players"];

        soupply.java393.types.ListUpdateGamemode[] players;

        this() pure nothrow @safe @nogc {}

        this(soupply.java393.types.ListUpdateGamemode[] players) pure nothrow @safe @nogc
        {
            this.players = players;
        }

        mixin Make;

        override string toString()
        {
            return "PlayerListItem.UpdateGamemode(players: " ~ std.conv.to!string(this.players) ~ ")";
        }

    }

    class UpdateLatency : Java393Packet
    {

        enum typeof(action) ACTION = 2;

        enum string[] __fields = ["players"];

        soupply.java393.types.ListUpdateLatency[] players;

        this() pure nothrow @safe @nogc {}

        this(soupply.java393.types.ListUpdateLatency[] players) pure nothrow @safe @nogc
        {
            this.players = players;
        }

        mixin Make;

        override string toString()
        {
            return "PlayerListItem.UpdateLatency(players: " ~ std.conv.to!string(this.players) ~ ")";
        }

    }

    class UpdateDisplayName : Java393Packet
    {

        enum typeof(action) ACTION = 3;

        enum string[] __fields = ["players"];

        soupply.java393.types.ListUpdateDisplayName[] players;

        this() pure nothrow @safe @nogc {}

        this(soupply.java393.types.ListUpdateDisplayName[] players) pure nothrow @safe @nogc
        {
            this.players = players;
        }

        mixin Make;

        override string toString()
        {
            return "PlayerListItem.UpdateDisplayName(players: " ~ std.conv.to!string(this.players) ~ ")";
        }

    }

    class RemovePlayer : Java393Packet
    {

        enum typeof(action) ACTION = 4;

        enum string[] __fields = ["players"];

        UUID[] players;

        this() pure nothrow @safe @nogc {}

        this(UUID[] players) pure nothrow @safe @nogc
        {
            this.players = players;
        }

        mixin Make;

        override string toString()
        {
            return "PlayerListItem.RemovePlayer(players: " ~ std.conv.to!string(this.players) ~ ")";
        }

    }

}

class FacePlayer : Java393Packet
{

    enum uint ID = 49;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    // type
    enum uint FEET = 0;
    enum uint EYES = 1;

    enum string[] __fields = ["type", "target", "isEntity", "entityId", "entityType"];

    @Var uint type;
    Vector!(double, "xyz") target;
    bool isEntity;
    @Condition("isEntity==true") @Var uint entityId;
    @Condition("isEntity==true") @Var uint entityType;

    this() pure nothrow @safe @nogc {}

    this(uint type, Vector!(double, "xyz") target=Vector!(double, "xyz").init, bool isEntity=bool.init, uint entityId=uint.init, uint entityType=uint.init) pure nothrow @safe @nogc
    {
        this.type = type;
        this.target = target;
        this.isEntity = isEntity;
        this.entityId = entityId;
        this.entityType = entityType;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        FacePlayer ret = new FacePlayer();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "FacePlayer(type: " ~ std.conv.to!string(this.type) ~ ", target: " ~ std.conv.to!string(this.target) ~ ", isEntity: " ~ std.conv.to!string(this.isEntity) ~ ", entityId: " ~ std.conv.to!string(this.entityId) ~ ", entityType: " ~ std.conv.to!string(this.entityType) ~ ")";
    }

}

class PlayerPositionAndLook : Java393Packet
{

    enum uint ID = 50;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    // flags
    enum ubyte X = 1;
    enum ubyte Y = 2;
    enum ubyte Z = 4;
    enum ubyte Y_ROTATION = 8;
    enum ubyte X_ROTATION = 16;

    enum string[] __fields = ["position", "yaw", "pitch", "flags", "teleportId"];

    Vector!(double, "xyz") position;
    float yaw;
    float pitch;
    ubyte flags;
    @Var uint teleportId;

    this() pure nothrow @safe @nogc {}

    this(Vector!(double, "xyz") position, float yaw=float.init, float pitch=float.init, ubyte flags=ubyte.init, uint teleportId=uint.init) pure nothrow @safe @nogc
    {
        this.position = position;
        this.yaw = yaw;
        this.pitch = pitch;
        this.flags = flags;
        this.teleportId = teleportId;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        PlayerPositionAndLook ret = new PlayerPositionAndLook();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "PlayerPositionAndLook(position: " ~ std.conv.to!string(this.position) ~ ", yaw: " ~ std.conv.to!string(this.yaw) ~ ", pitch: " ~ std.conv.to!string(this.pitch) ~ ", flags: " ~ std.conv.to!string(this.flags) ~ ", teleportId: " ~ std.conv.to!string(this.teleportId) ~ ")";
    }

}

class UseBed : Java393Packet
{

    enum uint ID = 51;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    enum string[] __fields = ["entityId", "position"];

    @Var uint entityId;
    ulong position;

    this() pure nothrow @safe @nogc {}

    this(uint entityId, ulong position=ulong.init) pure nothrow @safe @nogc
    {
        this.entityId = entityId;
        this.position = position;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        UseBed ret = new UseBed();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "UseBed(entityId: " ~ std.conv.to!string(this.entityId) ~ ", position: " ~ std.conv.to!string(this.position) ~ ")";
    }

}

class UnlockRecipes : Java393Packet
{

    enum uint ID = 52;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    // action
    enum uint ADD = 1;
    enum uint REMOVE = 2;
    enum uint ADD_WITHOUT_NOTIFICATION = 3;

    enum string[] __fields = ["action", "craftingRecipeBookOpen", "craftingRecipeBookFilterActive", "smeltingRecipeBookOpen", "smeltingRecipeBookFilterActive", "recipes", "bookRecipes"];

    @Var uint action;
    bool craftingRecipeBookOpen;
    bool craftingRecipeBookFilterActive;
    bool smeltingRecipeBookOpen;
    bool smeltingRecipeBookFilterActive;
    @Var uint[] recipes;
    @Condition("action==1||action==3") @Var uint[] bookRecipes;

    this() pure nothrow @safe @nogc {}

    this(uint action, bool craftingRecipeBookOpen=bool.init, bool craftingRecipeBookFilterActive=bool.init, bool smeltingRecipeBookOpen=bool.init, bool smeltingRecipeBookFilterActive=bool.init, uint[] recipes=(uint[]).init, uint[] bookRecipes=(uint[]).init) pure nothrow @safe @nogc
    {
        this.action = action;
        this.craftingRecipeBookOpen = craftingRecipeBookOpen;
        this.craftingRecipeBookFilterActive = craftingRecipeBookFilterActive;
        this.smeltingRecipeBookOpen = smeltingRecipeBookOpen;
        this.smeltingRecipeBookFilterActive = smeltingRecipeBookFilterActive;
        this.recipes = recipes;
        this.bookRecipes = bookRecipes;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        UnlockRecipes ret = new UnlockRecipes();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "UnlockRecipes(action: " ~ std.conv.to!string(this.action) ~ ", craftingRecipeBookOpen: " ~ std.conv.to!string(this.craftingRecipeBookOpen) ~ ", craftingRecipeBookFilterActive: " ~ std.conv.to!string(this.craftingRecipeBookFilterActive) ~ ", smeltingRecipeBookOpen: " ~ std.conv.to!string(this.smeltingRecipeBookOpen) ~ ", smeltingRecipeBookFilterActive: " ~ std.conv.to!string(this.smeltingRecipeBookFilterActive) ~ ", recipes: " ~ std.conv.to!string(this.recipes) ~ ", bookRecipes: " ~ std.conv.to!string(this.bookRecipes) ~ ")";
    }

}

class DestroyEntities : Java393Packet
{

    enum uint ID = 53;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    enum string[] __fields = ["entityIds"];

    @Var uint[] entityIds;

    this() pure nothrow @safe @nogc {}

    this(uint[] entityIds) pure nothrow @safe @nogc
    {
        this.entityIds = entityIds;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        DestroyEntities ret = new DestroyEntities();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "DestroyEntities(entityIds: " ~ std.conv.to!string(this.entityIds) ~ ")";
    }

}

class RemoveEntityEffect : Java393Packet
{

    enum uint ID = 54;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    enum string[] __fields = ["entityId", "effectId"];

    @Var uint entityId;
    ubyte effectId;

    this() pure nothrow @safe @nogc {}

    this(uint entityId, ubyte effectId=ubyte.init) pure nothrow @safe @nogc
    {
        this.entityId = entityId;
        this.effectId = effectId;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        RemoveEntityEffect ret = new RemoveEntityEffect();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "RemoveEntityEffect(entityId: " ~ std.conv.to!string(this.entityId) ~ ", effectId: " ~ std.conv.to!string(this.effectId) ~ ")";
    }

}

class ResourcePackSend : Java393Packet
{

    enum uint ID = 55;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    enum string[] __fields = ["url", "hash"];

    string url;
    string hash;

    this() pure nothrow @safe @nogc {}

    this(string url, string hash=string.init) pure nothrow @safe @nogc
    {
        this.url = url;
        this.hash = hash;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        ResourcePackSend ret = new ResourcePackSend();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "ResourcePackSend(url: " ~ std.conv.to!string(this.url) ~ ", hash: " ~ std.conv.to!string(this.hash) ~ ")";
    }

}

class Respawn : Java393Packet
{

    enum uint ID = 56;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    // dimension
    enum int NETHER = -1;
    enum int OVERWORLD = 0;
    enum int END = 1;

    // difficulty
    enum ubyte PEACEFUL = 0;
    enum ubyte EASY = 1;
    enum ubyte NORMAL = 2;
    enum ubyte HARD = 3;

    // gamemode
    enum ubyte SURVIVAL = 0;
    enum ubyte CREATIVE = 1;
    enum ubyte ADVENTURE = 2;
    enum ubyte SPECTATOR = 3;

    // level type
    enum string INFINITY = "default";
    enum string FLAT = "flat";
    enum string AMPLIFIED = "amplified";
    enum string LARGE_BIOMES = "largeBiomes";

    enum string[] __fields = ["dimension", "difficulty", "gamemode", "levelType"];

    int dimension;
    ubyte difficulty;
    ubyte gamemode;
    string levelType;

    this() pure nothrow @safe @nogc {}

    this(int dimension, ubyte difficulty=ubyte.init, ubyte gamemode=ubyte.init, string levelType=string.init) pure nothrow @safe @nogc
    {
        this.dimension = dimension;
        this.difficulty = difficulty;
        this.gamemode = gamemode;
        this.levelType = levelType;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        Respawn ret = new Respawn();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "Respawn(dimension: " ~ std.conv.to!string(this.dimension) ~ ", difficulty: " ~ std.conv.to!string(this.difficulty) ~ ", gamemode: " ~ std.conv.to!string(this.gamemode) ~ ", levelType: " ~ std.conv.to!string(this.levelType) ~ ")";
    }

}

class EntityHeadLook : Java393Packet
{

    enum uint ID = 57;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    enum string[] __fields = ["entityId", "headYaw"];

    @Var uint entityId;
    ubyte headYaw;

    this() pure nothrow @safe @nogc {}

    this(uint entityId, ubyte headYaw=ubyte.init) pure nothrow @safe @nogc
    {
        this.entityId = entityId;
        this.headYaw = headYaw;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        EntityHeadLook ret = new EntityHeadLook();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "EntityHeadLook(entityId: " ~ std.conv.to!string(this.entityId) ~ ", headYaw: " ~ std.conv.to!string(this.headYaw) ~ ")";
    }

}

class AdvancementProgress : Java393Packet
{

    enum uint ID = 58;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    enum string[] __fields = ["notEmpty", "identifier"];

    bool notEmpty;
    @Condition("notEmpty==true") string identifier;

    this() pure nothrow @safe @nogc {}

    this(bool notEmpty, string identifier=string.init) pure nothrow @safe @nogc
    {
        this.notEmpty = notEmpty;
        this.identifier = identifier;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        AdvancementProgress ret = new AdvancementProgress();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "AdvancementProgress(notEmpty: " ~ std.conv.to!string(this.notEmpty) ~ ", identifier: " ~ std.conv.to!string(this.identifier) ~ ")";
    }

}

class WorldBorder : Java393Packet
{

    enum uint ID = 59;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    enum string[] __fields = ["action"];

    @Var uint action;

    this() pure nothrow @safe @nogc {}

    this(uint action) pure nothrow @safe @nogc
    {
        this.action = action;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        WorldBorder ret = new WorldBorder();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "WorldBorder(action: " ~ std.conv.to!string(this.action) ~ ")";
    }

    enum string variantField = "action";

    alias Variants = TypeTuple!(SetSize, LerpSize, SetCenter, Initialize, SetWarningTime, SetWarningBlocks);

    class SetSize : Java393Packet
    {

        enum typeof(action) ACTION = 0;

        enum string[] __fields = ["diameter"];

        double diameter;

        this() pure nothrow @safe @nogc {}

        this(double diameter) pure nothrow @safe @nogc
        {
            this.diameter = diameter;
        }

        mixin Make;

        override string toString()
        {
            return "WorldBorder.SetSize(diameter: " ~ std.conv.to!string(this.diameter) ~ ")";
        }

    }

    class LerpSize : Java393Packet
    {

        enum typeof(action) ACTION = 1;

        enum string[] __fields = ["oldDiameter", "newDiameter", "speed"];

        double oldDiameter;
        double newDiameter;
        @Var ulong speed;

        this() pure nothrow @safe @nogc {}

        this(double oldDiameter, double newDiameter=double.init, ulong speed=ulong.init) pure nothrow @safe @nogc
        {
            this.oldDiameter = oldDiameter;
            this.newDiameter = newDiameter;
            this.speed = speed;
        }

        mixin Make;

        override string toString()
        {
            return "WorldBorder.LerpSize(oldDiameter: " ~ std.conv.to!string(this.oldDiameter) ~ ", newDiameter: " ~ std.conv.to!string(this.newDiameter) ~ ", speed: " ~ std.conv.to!string(this.speed) ~ ")";
        }

    }

    class SetCenter : Java393Packet
    {

        enum typeof(action) ACTION = 2;

        enum string[] __fields = ["center"];

        Vector!(double, "xyz") center;

        this() pure nothrow @safe @nogc {}

        this(Vector!(double, "xyz") center) pure nothrow @safe @nogc
        {
            this.center = center;
        }

        mixin Make;

        override string toString()
        {
            return "WorldBorder.SetCenter(center: " ~ std.conv.to!string(this.center) ~ ")";
        }

    }

    class Initialize : Java393Packet
    {

        enum typeof(action) ACTION = 3;

        enum string[] __fields = ["center", "oldDiameter", "newDiameter", "speed", "portalTeleportBoundary", "warningTime", "warningBlocks"];

        Vector!(double, "xyz") center;
        double oldDiameter;
        double newDiameter;
        @Var ulong speed;
        @Var uint portalTeleportBoundary;
        @Var uint warningTime;
        @Var uint warningBlocks;

        this() pure nothrow @safe @nogc {}

        this(Vector!(double, "xyz") center, double oldDiameter=double.init, double newDiameter=double.init, ulong speed=ulong.init, uint portalTeleportBoundary=uint.init, uint warningTime=uint.init, uint warningBlocks=uint.init) pure nothrow @safe @nogc
        {
            this.center = center;
            this.oldDiameter = oldDiameter;
            this.newDiameter = newDiameter;
            this.speed = speed;
            this.portalTeleportBoundary = portalTeleportBoundary;
            this.warningTime = warningTime;
            this.warningBlocks = warningBlocks;
        }

        mixin Make;

        override string toString()
        {
            return "WorldBorder.Initialize(center: " ~ std.conv.to!string(this.center) ~ ", oldDiameter: " ~ std.conv.to!string(this.oldDiameter) ~ ", newDiameter: " ~ std.conv.to!string(this.newDiameter) ~ ", speed: " ~ std.conv.to!string(this.speed) ~ ", portalTeleportBoundary: " ~ std.conv.to!string(this.portalTeleportBoundary) ~ ", warningTime: " ~ std.conv.to!string(this.warningTime) ~ ", warningBlocks: " ~ std.conv.to!string(this.warningBlocks) ~ ")";
        }

    }

    class SetWarningTime : Java393Packet
    {

        enum typeof(action) ACTION = 4;

        enum string[] __fields = ["warningTime"];

        @Var uint warningTime;

        this() pure nothrow @safe @nogc {}

        this(uint warningTime) pure nothrow @safe @nogc
        {
            this.warningTime = warningTime;
        }

        mixin Make;

        override string toString()
        {
            return "WorldBorder.SetWarningTime(warningTime: " ~ std.conv.to!string(this.warningTime) ~ ")";
        }

    }

    class SetWarningBlocks : Java393Packet
    {

        enum typeof(action) ACTION = 5;

        enum string[] __fields = ["warningBlocks"];

        @Var uint warningBlocks;

        this() pure nothrow @safe @nogc {}

        this(uint warningBlocks) pure nothrow @safe @nogc
        {
            this.warningBlocks = warningBlocks;
        }

        mixin Make;

        override string toString()
        {
            return "WorldBorder.SetWarningBlocks(warningBlocks: " ~ std.conv.to!string(this.warningBlocks) ~ ")";
        }

    }

}

class Camera : Java393Packet
{

    enum uint ID = 60;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    enum string[] __fields = ["entityId"];

    @Var uint entityId;

    this() pure nothrow @safe @nogc {}

    this(uint entityId) pure nothrow @safe @nogc
    {
        this.entityId = entityId;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        Camera ret = new Camera();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "Camera(entityId: " ~ std.conv.to!string(this.entityId) ~ ")";
    }

}

class HeldItemChange : Java393Packet
{

    enum uint ID = 61;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    enum string[] __fields = ["slot"];

    ubyte slot;

    this() pure nothrow @safe @nogc {}

    this(ubyte slot) pure nothrow @safe @nogc
    {
        this.slot = slot;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        HeldItemChange ret = new HeldItemChange();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "HeldItemChange(slot: " ~ std.conv.to!string(this.slot) ~ ")";
    }

}

class DisplayScoreboard : Java393Packet
{

    enum uint ID = 62;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    // position
    enum ubyte LIST = 0;
    enum ubyte SIDEBAR = 1;
    enum ubyte BELOW_NAME = 2;

    enum string[] __fields = ["position", "scoreName"];

    ubyte position;
    string scoreName;

    this() pure nothrow @safe @nogc {}

    this(ubyte position, string scoreName=string.init) pure nothrow @safe @nogc
    {
        this.position = position;
        this.scoreName = scoreName;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        DisplayScoreboard ret = new DisplayScoreboard();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "DisplayScoreboard(position: " ~ std.conv.to!string(this.position) ~ ", scoreName: " ~ std.conv.to!string(this.scoreName) ~ ")";
    }

}

class EntityMetadata : Java393Packet
{

    enum uint ID = 63;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    enum string[] __fields = ["entityId", "metadata"];

    @Var uint entityId;
    Metadata metadata;

    this() pure nothrow @safe @nogc {}

    this(uint entityId, Metadata metadata=Metadata.init) pure nothrow @safe @nogc
    {
        this.entityId = entityId;
        this.metadata = metadata;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        EntityMetadata ret = new EntityMetadata();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "EntityMetadata(entityId: " ~ std.conv.to!string(this.entityId) ~ ", metadata: " ~ std.conv.to!string(this.metadata) ~ ")";
    }

}

class AttachEntity : Java393Packet
{

    enum uint ID = 64;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    enum string[] __fields = ["target", "holder"];

    uint target;
    uint holder;

    this() pure nothrow @safe @nogc {}

    this(uint target, uint holder=uint.init) pure nothrow @safe @nogc
    {
        this.target = target;
        this.holder = holder;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        AttachEntity ret = new AttachEntity();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "AttachEntity(target: " ~ std.conv.to!string(this.target) ~ ", holder: " ~ std.conv.to!string(this.holder) ~ ")";
    }

}

class EntityVelocity : Java393Packet
{

    enum uint ID = 65;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    enum string[] __fields = ["entityId", "velocity"];

    @Var uint entityId;
    Vector!(short, "xyz") velocity;

    this() pure nothrow @safe @nogc {}

    this(uint entityId, Vector!(short, "xyz") velocity=Vector!(short, "xyz").init) pure nothrow @safe @nogc
    {
        this.entityId = entityId;
        this.velocity = velocity;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        EntityVelocity ret = new EntityVelocity();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "EntityVelocity(entityId: " ~ std.conv.to!string(this.entityId) ~ ", velocity: " ~ std.conv.to!string(this.velocity) ~ ")";
    }

}

class EntityEquipment : Java393Packet
{

    enum uint ID = 66;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    enum string[] __fields = ["entityId", "slot", "item"];

    @Var uint entityId;
    @Var uint slot;
    soupply.java393.types.Slot item;

    this() pure nothrow @safe @nogc {}

    this(uint entityId, uint slot=uint.init, soupply.java393.types.Slot item=soupply.java393.types.Slot.init) pure nothrow @safe @nogc
    {
        this.entityId = entityId;
        this.slot = slot;
        this.item = item;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        EntityEquipment ret = new EntityEquipment();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "EntityEquipment(entityId: " ~ std.conv.to!string(this.entityId) ~ ", slot: " ~ std.conv.to!string(this.slot) ~ ", item: " ~ std.conv.to!string(this.item) ~ ")";
    }

}

class SetExperience : Java393Packet
{

    enum uint ID = 67;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    enum string[] __fields = ["experience", "level", "totalExperience"];

    float experience;
    @Var uint level;
    @Var uint totalExperience;

    this() pure nothrow @safe @nogc {}

    this(float experience, uint level=uint.init, uint totalExperience=uint.init) pure nothrow @safe @nogc
    {
        this.experience = experience;
        this.level = level;
        this.totalExperience = totalExperience;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        SetExperience ret = new SetExperience();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "SetExperience(experience: " ~ std.conv.to!string(this.experience) ~ ", level: " ~ std.conv.to!string(this.level) ~ ", totalExperience: " ~ std.conv.to!string(this.totalExperience) ~ ")";
    }

}

class UpdateHealth : Java393Packet
{

    enum uint ID = 68;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    enum string[] __fields = ["health", "hunger", "saturation"];

    float health;
    @Var uint hunger;
    float saturation;

    this() pure nothrow @safe @nogc {}

    this(float health, uint hunger=uint.init, float saturation=float.init) pure nothrow @safe @nogc
    {
        this.health = health;
        this.hunger = hunger;
        this.saturation = saturation;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        UpdateHealth ret = new UpdateHealth();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "UpdateHealth(health: " ~ std.conv.to!string(this.health) ~ ", hunger: " ~ std.conv.to!string(this.hunger) ~ ", saturation: " ~ std.conv.to!string(this.saturation) ~ ")";
    }

}

class ScoreboardObjective : Java393Packet
{

    enum uint ID = 69;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    // mode
    enum ubyte CREATE = 0;
    enum ubyte REMOVE = 1;
    enum ubyte UPDATE = 2;

    enum string[] __fields = ["name", "mode", "value", "type"];

    string name;
    ubyte mode;
    @Condition("mode!=1") string value;
    @Condition("mode!=1") @Var uint type;

    this() pure nothrow @safe @nogc {}

    this(string name, ubyte mode=ubyte.init, string value=string.init, uint type=uint.init) pure nothrow @safe @nogc
    {
        this.name = name;
        this.mode = mode;
        this.value = value;
        this.type = type;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        ScoreboardObjective ret = new ScoreboardObjective();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "ScoreboardObjective(name: " ~ std.conv.to!string(this.name) ~ ", mode: " ~ std.conv.to!string(this.mode) ~ ", value: " ~ std.conv.to!string(this.value) ~ ", type: " ~ std.conv.to!string(this.type) ~ ")";
    }

}

class SetPassengers : Java393Packet
{

    enum uint ID = 70;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    enum string[] __fields = ["entityId", "passengers"];

    @Var uint entityId;
    @Var uint[] passengers;

    this() pure nothrow @safe @nogc {}

    this(uint entityId, uint[] passengers=(uint[]).init) pure nothrow @safe @nogc
    {
        this.entityId = entityId;
        this.passengers = passengers;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        SetPassengers ret = new SetPassengers();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "SetPassengers(entityId: " ~ std.conv.to!string(this.entityId) ~ ", passengers: " ~ std.conv.to!string(this.passengers) ~ ")";
    }

}

class Teams : Java393Packet
{

    enum uint ID = 71;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    enum string[] __fields = ["name", "mode"];

    string name;
    ubyte mode;

    this() pure nothrow @safe @nogc {}

    this(string name, ubyte mode=ubyte.init) pure nothrow @safe @nogc
    {
        this.name = name;
        this.mode = mode;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        Teams ret = new Teams();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "Teams(name: " ~ std.conv.to!string(this.name) ~ ", mode: " ~ std.conv.to!string(this.mode) ~ ")";
    }

    enum string variantField = "mode";

    alias Variants = TypeTuple!(CreateTeam, RemoveTeam, UpdateTeamInfo, AddPlayers, RemovePlayers);

    class CreateTeam : Java393Packet
    {

        enum typeof(mode) MODE = 0;

        // friendly flags
        enum ubyte FRIENDLY_FIRE = 1;
        enum ubyte SEE_TEAM_INVISIBLE_PLAYERS = 2;

        // nametag visibility
        enum string ALWAYS_HIDE = "always";
        enum string HIDE_OTHER_TEAMS = "hideOtherTeams";
        enum string HIDE_OWN_TEAM = "hideOwnTeam";
        enum string NEVER_HIDE = "never";

        // collision rule
        enum string ALWAYS_PUSH = "always";
        enum string PUSH_OTHER_TEAMS = "pushOtherTeams";
        enum string PUSH_OWN_TEAM = "pushOwnTeam";
        enum string NEVER_PUSH = "never";

        enum string[] __fields = ["displayName", "friendlyFlags", "nametagVisibility", "collisionRule", "formatting", "prefix", "suffix", "players"];

        string displayName;
        ubyte friendlyFlags;
        string nametagVisibility;
        string collisionRule;
        @Var uint formatting;
        string prefix;
        string suffix;
        string[] players;

        this() pure nothrow @safe @nogc {}

        this(string displayName, ubyte friendlyFlags=ubyte.init, string nametagVisibility=string.init, string collisionRule=string.init, uint formatting=uint.init, string prefix=string.init, string suffix=string.init, string[] players=(string[]).init) pure nothrow @safe @nogc
        {
            this.displayName = displayName;
            this.friendlyFlags = friendlyFlags;
            this.nametagVisibility = nametagVisibility;
            this.collisionRule = collisionRule;
            this.formatting = formatting;
            this.prefix = prefix;
            this.suffix = suffix;
            this.players = players;
        }

        mixin Make;

        override string toString()
        {
            return "Teams.CreateTeam(displayName: " ~ std.conv.to!string(this.displayName) ~ ", friendlyFlags: " ~ std.conv.to!string(this.friendlyFlags) ~ ", nametagVisibility: " ~ std.conv.to!string(this.nametagVisibility) ~ ", collisionRule: " ~ std.conv.to!string(this.collisionRule) ~ ", formatting: " ~ std.conv.to!string(this.formatting) ~ ", prefix: " ~ std.conv.to!string(this.prefix) ~ ", suffix: " ~ std.conv.to!string(this.suffix) ~ ", players: " ~ std.conv.to!string(this.players) ~ ")";
        }

    }

    class RemoveTeam : Java393Packet
    {

        enum typeof(mode) MODE = 1;

        enum string[] __fields = [];

        mixin Make;

        override string toString()
        {
            return "Teams.RemoveTeam()";
        }

    }

    class UpdateTeamInfo : Java393Packet
    {

        enum typeof(mode) MODE = 2;

        // friendly flags
        enum ubyte FRIENDLY_FIRE = 1;
        enum ubyte SEE_TEAM_INVISIBLE_PLAYERS = 2;

        // nametag visibility
        enum string ALWAYS_HIDE = "always";
        enum string HIDE_OTHER_TEAMS = "hideOtherTeams";
        enum string HIDE_OWN_TEAM = "hideOwnTeam";
        enum string NEVER_HIDE = "never";

        // collision rule
        enum string ALWAYS_PUSH = "always";
        enum string PUSH_OTHER_TEAMS = "pushOtherTeams";
        enum string PUSH_OWN_TEAM = "pushOwnTeam";
        enum string NEVER_PUSH = "never";

        enum string[] __fields = ["displayName", "friendlyFlags", "nametagVisibility", "collisionRule", "formatting", "prefix", "suffix"];

        string displayName;
        ubyte friendlyFlags;
        string nametagVisibility;
        string collisionRule;
        @Var uint formatting;
        string prefix;
        string suffix;

        this() pure nothrow @safe @nogc {}

        this(string displayName, ubyte friendlyFlags=ubyte.init, string nametagVisibility=string.init, string collisionRule=string.init, uint formatting=uint.init, string prefix=string.init, string suffix=string.init) pure nothrow @safe @nogc
        {
            this.displayName = displayName;
            this.friendlyFlags = friendlyFlags;
            this.nametagVisibility = nametagVisibility;
            this.collisionRule = collisionRule;
            this.formatting = formatting;
            this.prefix = prefix;
            this.suffix = suffix;
        }

        mixin Make;

        override string toString()
        {
            return "Teams.UpdateTeamInfo(displayName: " ~ std.conv.to!string(this.displayName) ~ ", friendlyFlags: " ~ std.conv.to!string(this.friendlyFlags) ~ ", nametagVisibility: " ~ std.conv.to!string(this.nametagVisibility) ~ ", collisionRule: " ~ std.conv.to!string(this.collisionRule) ~ ", formatting: " ~ std.conv.to!string(this.formatting) ~ ", prefix: " ~ std.conv.to!string(this.prefix) ~ ", suffix: " ~ std.conv.to!string(this.suffix) ~ ")";
        }

    }

    class AddPlayers : Java393Packet
    {

        enum typeof(mode) MODE = 3;

        enum string[] __fields = ["players"];

        string[] players;

        this() pure nothrow @safe @nogc {}

        this(string[] players) pure nothrow @safe @nogc
        {
            this.players = players;
        }

        mixin Make;

        override string toString()
        {
            return "Teams.AddPlayers(players: " ~ std.conv.to!string(this.players) ~ ")";
        }

    }

    class RemovePlayers : Java393Packet
    {

        enum typeof(mode) MODE = 4;

        enum string[] __fields = ["players"];

        string[] players;

        this() pure nothrow @safe @nogc {}

        this(string[] players) pure nothrow @safe @nogc
        {
            this.players = players;
        }

        mixin Make;

        override string toString()
        {
            return "Teams.RemovePlayers(players: " ~ std.conv.to!string(this.players) ~ ")";
        }

    }

}

class UpdateScore : Java393Packet
{

    enum uint ID = 72;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    // action
    enum ubyte UPDATE = 0;
    enum ubyte REMOVE = 1;

    enum string[] __fields = ["scoreName", "action", "objectiveName", "value"];

    string scoreName;
    ubyte action;
    string objectiveName;
    @Condition("action==0") @Var uint value;

    this() pure nothrow @safe @nogc {}

    this(string scoreName, ubyte action=ubyte.init, string objectiveName=string.init, uint value=uint.init) pure nothrow @safe @nogc
    {
        this.scoreName = scoreName;
        this.action = action;
        this.objectiveName = objectiveName;
        this.value = value;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        UpdateScore ret = new UpdateScore();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "UpdateScore(scoreName: " ~ std.conv.to!string(this.scoreName) ~ ", action: " ~ std.conv.to!string(this.action) ~ ", objectiveName: " ~ std.conv.to!string(this.objectiveName) ~ ", value: " ~ std.conv.to!string(this.value) ~ ")";
    }

}

class SpawnPosition : Java393Packet
{

    enum uint ID = 73;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    enum string[] __fields = ["position"];

    ulong position;

    this() pure nothrow @safe @nogc {}

    this(ulong position) pure nothrow @safe @nogc
    {
        this.position = position;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        SpawnPosition ret = new SpawnPosition();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "SpawnPosition(position: " ~ std.conv.to!string(this.position) ~ ")";
    }

}

class TimeUpdate : Java393Packet
{

    enum uint ID = 74;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    enum string[] __fields = ["worldAge", "time"];

    ulong worldAge;
    long time;

    this() pure nothrow @safe @nogc {}

    this(ulong worldAge, long time=long.init) pure nothrow @safe @nogc
    {
        this.worldAge = worldAge;
        this.time = time;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        TimeUpdate ret = new TimeUpdate();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "TimeUpdate(worldAge: " ~ std.conv.to!string(this.worldAge) ~ ", time: " ~ std.conv.to!string(this.time) ~ ")";
    }

}

class Title : Java393Packet
{

    enum uint ID = 75;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    enum string[] __fields = ["action"];

    @Var uint action;

    this() pure nothrow @safe @nogc {}

    this(uint action) pure nothrow @safe @nogc
    {
        this.action = action;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        Title ret = new Title();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "Title(action: " ~ std.conv.to!string(this.action) ~ ")";
    }

    enum string variantField = "action";

    alias Variants = TypeTuple!(SetTitle, SetSubtitle, SetActionBar, SetTimings, Hide, Reset);

    class SetTitle : Java393Packet
    {

        enum typeof(action) ACTION = 0;

        enum string[] __fields = ["text"];

        string text;

        this() pure nothrow @safe @nogc {}

        this(string text) pure nothrow @safe @nogc
        {
            this.text = text;
        }

        mixin Make;

        override string toString()
        {
            return "Title.SetTitle(text: " ~ std.conv.to!string(this.text) ~ ")";
        }

    }

    class SetSubtitle : Java393Packet
    {

        enum typeof(action) ACTION = 1;

        enum string[] __fields = ["text"];

        string text;

        this() pure nothrow @safe @nogc {}

        this(string text) pure nothrow @safe @nogc
        {
            this.text = text;
        }

        mixin Make;

        override string toString()
        {
            return "Title.SetSubtitle(text: " ~ std.conv.to!string(this.text) ~ ")";
        }

    }

    class SetActionBar : Java393Packet
    {

        enum typeof(action) ACTION = 2;

        enum string[] __fields = ["text"];

        string text;

        this() pure nothrow @safe @nogc {}

        this(string text) pure nothrow @safe @nogc
        {
            this.text = text;
        }

        mixin Make;

        override string toString()
        {
            return "Title.SetActionBar(text: " ~ std.conv.to!string(this.text) ~ ")";
        }

    }

    class SetTimings : Java393Packet
    {

        enum typeof(action) ACTION = 3;

        enum string[] __fields = ["fadeIn", "stay", "fadeOut"];

        uint fadeIn;
        uint stay;
        uint fadeOut;

        this() pure nothrow @safe @nogc {}

        this(uint fadeIn, uint stay=uint.init, uint fadeOut=uint.init) pure nothrow @safe @nogc
        {
            this.fadeIn = fadeIn;
            this.stay = stay;
            this.fadeOut = fadeOut;
        }

        mixin Make;

        override string toString()
        {
            return "Title.SetTimings(fadeIn: " ~ std.conv.to!string(this.fadeIn) ~ ", stay: " ~ std.conv.to!string(this.stay) ~ ", fadeOut: " ~ std.conv.to!string(this.fadeOut) ~ ")";
        }

    }

    class Hide : Java393Packet
    {

        enum typeof(action) ACTION = 4;

        enum string[] __fields = [];

        mixin Make;

        override string toString()
        {
            return "Title.Hide()";
        }

    }

    class Reset : Java393Packet
    {

        enum typeof(action) ACTION = 5;

        enum string[] __fields = [];

        mixin Make;

        override string toString()
        {
            return "Title.Reset()";
        }

    }

}

class StopSound : Java393Packet
{

    enum uint ID = 76;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    // source
    enum uint MASTER = 0;
    enum uint MUSIC = 1;
    enum uint RECORD = 2;
    enum uint WEATHER = 3;
    enum uint BLOCK = 4;
    enum uint HOSTILE = 5;
    enum uint NEUTRAL = 6;
    enum uint PLAYER = 7;
    enum uint AMBIENT = 8;
    enum uint VOICE = 9;

    enum string[] __fields = ["flags", "source", "sound"];

    ubyte flags;
    @Condition("flags&1") @Var uint source;
    @Condition("flags&2") string sound;

    this() pure nothrow @safe @nogc {}

    this(ubyte flags, uint source=uint.init, string sound=string.init) pure nothrow @safe @nogc
    {
        this.flags = flags;
        this.source = source;
        this.sound = sound;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        StopSound ret = new StopSound();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "StopSound(flags: " ~ std.conv.to!string(this.flags) ~ ", source: " ~ std.conv.to!string(this.source) ~ ", sound: " ~ std.conv.to!string(this.sound) ~ ")";
    }

}

class SoundEffect : Java393Packet
{

    enum uint ID = 77;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    enum string[] __fields = ["soundId", "category", "position", "volume", "pitch"];

    @Var uint soundId;
    @Var uint category;
    Vector!(int, "xyz") position;
    float volume;
    float pitch;

    this() pure nothrow @safe @nogc {}

    this(uint soundId, uint category=uint.init, Vector!(int, "xyz") position=Vector!(int, "xyz").init, float volume=float.init, float pitch=float.init) pure nothrow @safe @nogc
    {
        this.soundId = soundId;
        this.category = category;
        this.position = position;
        this.volume = volume;
        this.pitch = pitch;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        SoundEffect ret = new SoundEffect();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "SoundEffect(soundId: " ~ std.conv.to!string(this.soundId) ~ ", category: " ~ std.conv.to!string(this.category) ~ ", position: " ~ std.conv.to!string(this.position) ~ ", volume: " ~ std.conv.to!string(this.volume) ~ ", pitch: " ~ std.conv.to!string(this.pitch) ~ ")";
    }

}

class PlayerListHeaderAndFooter : Java393Packet
{

    enum uint ID = 78;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    enum string[] __fields = ["header", "footer"];

    string header;
    string footer;

    this() pure nothrow @safe @nogc {}

    this(string header, string footer=string.init) pure nothrow @safe @nogc
    {
        this.header = header;
        this.footer = footer;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        PlayerListHeaderAndFooter ret = new PlayerListHeaderAndFooter();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "PlayerListHeaderAndFooter(header: " ~ std.conv.to!string(this.header) ~ ", footer: " ~ std.conv.to!string(this.footer) ~ ")";
    }

}

class CollectItem : Java393Packet
{

    enum uint ID = 79;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    enum string[] __fields = ["collected", "collector", "count"];

    @Var uint collected;
    @Var uint collector;
    @Var uint count;

    this() pure nothrow @safe @nogc {}

    this(uint collected, uint collector=uint.init, uint count=uint.init) pure nothrow @safe @nogc
    {
        this.collected = collected;
        this.collector = collector;
        this.count = count;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        CollectItem ret = new CollectItem();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "CollectItem(collected: " ~ std.conv.to!string(this.collected) ~ ", collector: " ~ std.conv.to!string(this.collector) ~ ", count: " ~ std.conv.to!string(this.count) ~ ")";
    }

}

class EntityTeleport : Java393Packet
{

    enum uint ID = 80;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    enum string[] __fields = ["entityId", "position", "yaw", "pitch", "onGround"];

    @Var uint entityId;
    Vector!(double, "xyz") position;
    ubyte yaw;
    ubyte pitch;
    bool onGround;

    this() pure nothrow @safe @nogc {}

    this(uint entityId, Vector!(double, "xyz") position=Vector!(double, "xyz").init, ubyte yaw=ubyte.init, ubyte pitch=ubyte.init, bool onGround=bool.init) pure nothrow @safe @nogc
    {
        this.entityId = entityId;
        this.position = position;
        this.yaw = yaw;
        this.pitch = pitch;
        this.onGround = onGround;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        EntityTeleport ret = new EntityTeleport();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "EntityTeleport(entityId: " ~ std.conv.to!string(this.entityId) ~ ", position: " ~ std.conv.to!string(this.position) ~ ", yaw: " ~ std.conv.to!string(this.yaw) ~ ", pitch: " ~ std.conv.to!string(this.pitch) ~ ", onGround: " ~ std.conv.to!string(this.onGround) ~ ")";
    }

}

class Advencements : Java393Packet
{

    enum uint ID = 81;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    enum string[] __fields = [];

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        Advencements ret = new Advencements();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "Advencements()";
    }

}

class EntityProperties : Java393Packet
{

    enum uint ID = 82;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    enum string[] __fields = ["entityId", "attributes"];

    @Var uint entityId;
    @Length!uint soupply.java393.types.Attribute[] attributes;

    this() pure nothrow @safe @nogc {}

    this(uint entityId, soupply.java393.types.Attribute[] attributes=(soupply.java393.types.Attribute[]).init) pure nothrow @safe @nogc
    {
        this.entityId = entityId;
        this.attributes = attributes;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        EntityProperties ret = new EntityProperties();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "EntityProperties(entityId: " ~ std.conv.to!string(this.entityId) ~ ", attributes: " ~ std.conv.to!string(this.attributes) ~ ")";
    }

}

class EntityEffect : Java393Packet
{

    enum uint ID = 83;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    // effect id
    enum ubyte SPEED = 1;
    enum ubyte SLOWNESS = 2;
    enum ubyte HASTE = 3;
    enum ubyte MINING_FATIGUE = 4;
    enum ubyte STRENGTH = 5;
    enum ubyte INSTANT_HEALTH = 6;
    enum ubyte INSTANT_DAMAGE = 7;
    enum ubyte JUMP_BOOST = 8;
    enum ubyte NAUSEA = 9;
    enum ubyte REGENERATION = 10;
    enum ubyte RESISTANCE = 11;
    enum ubyte FIRE_RESISTANCE = 12;
    enum ubyte WATER_BREATHING = 13;
    enum ubyte INVISIBILITY = 14;
    enum ubyte BLINDNESS = 15;
    enum ubyte NIGHT_VISION = 16;
    enum ubyte HUNGER = 17;
    enum ubyte WEAKNESS = 18;
    enum ubyte POISON = 19;
    enum ubyte WITHER = 20;
    enum ubyte HEALTH_BOOST = 21;
    enum ubyte ABSORPTION = 22;
    enum ubyte SATURATION = 23;
    enum ubyte GLOWING = 24;
    enum ubyte LEVITATION = 25;
    enum ubyte LUCK = 26;
    enum ubyte BAD_LUCK = 27;

    // flags
    enum ubyte AMBIENT = 1;
    enum ubyte SHOW_PARTICLES = 2;

    enum string[] __fields = ["entityId", "effectId", "amplifier", "duration", "flags"];

    @Var uint entityId;
    ubyte effectId;
    ubyte amplifier;
    @Var uint duration;
    ubyte flags;

    this() pure nothrow @safe @nogc {}

    this(uint entityId, ubyte effectId=ubyte.init, ubyte amplifier=ubyte.init, uint duration=uint.init, ubyte flags=ubyte.init) pure nothrow @safe @nogc
    {
        this.entityId = entityId;
        this.effectId = effectId;
        this.amplifier = amplifier;
        this.duration = duration;
        this.flags = flags;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        EntityEffect ret = new EntityEffect();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "EntityEffect(entityId: " ~ std.conv.to!string(this.entityId) ~ ", effectId: " ~ std.conv.to!string(this.effectId) ~ ", amplifier: " ~ std.conv.to!string(this.amplifier) ~ ", duration: " ~ std.conv.to!string(this.duration) ~ ", flags: " ~ std.conv.to!string(this.flags) ~ ")";
    }

}

class DeclareRecipes : Java393Packet
{

    enum uint ID = 84;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    enum string[] __fields = ["recipes"];

    soupply.java393.types.Recipe[] recipes;

    this() pure nothrow @safe @nogc {}

    this(soupply.java393.types.Recipe[] recipes) pure nothrow @safe @nogc
    {
        this.recipes = recipes;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        DeclareRecipes ret = new DeclareRecipes();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "DeclareRecipes(recipes: " ~ std.conv.to!string(this.recipes) ~ ")";
    }

}

class Tags : Java393Packet
{

    enum uint ID = 85;

    enum bool CLIENTBOUND = true;
    enum bool SERVERBOUND = false;

    enum string[] __fields = ["blockTags", "itemTags", "fluidTags"];

    soupply.java393.types.Tag[] blockTags;
    soupply.java393.types.Tag[] itemTags;
    soupply.java393.types.Tag[] fluidTags;

    this() pure nothrow @safe @nogc {}

    this(soupply.java393.types.Tag[] blockTags, soupply.java393.types.Tag[] itemTags=(soupply.java393.types.Tag[]).init, soupply.java393.types.Tag[] fluidTags=(soupply.java393.types.Tag[]).init) pure nothrow @safe @nogc
    {
        this.blockTags = blockTags;
        this.itemTags = itemTags;
        this.fluidTags = fluidTags;
    }

    mixin Make;

    public static typeof(this) fromBuffer(ubyte[] buffer)
    {
        Tags ret = new Tags();
        ret.autoDecode(buffer);
        return ret;
    }

    override string toString()
    {
        return "Tags(blockTags: " ~ std.conv.to!string(this.blockTags) ~ ", itemTags: " ~ std.conv.to!string(this.itemTags) ~ ", fluidTags: " ~ std.conv.to!string(this.fluidTags) ~ ")";
    }

}
